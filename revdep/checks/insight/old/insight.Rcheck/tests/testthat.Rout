
R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> if (require("testthat")) {
+   library(insight)
+ 
+   is_dev_version <- length(strsplit(packageDescription("insight")$Version, "\\.")[[1]]) > 3
+ 
+   if (is_dev_version) {
+     Sys.setenv("RunAllinsightTests" = "yes")
+   } else {
+     Sys.setenv("RunAllinsightTests" = "no")
+   }
+   si <- Sys.info()
+ 
+   osx <- tryCatch(
+     {
+       if (!is.null(si["sysname"])) {
+         si["sysname"] == "Darwin" || grepl("^darwin", R.version$os)
+       } else {
+         FALSE
+       }
+     },
+     error = function(e) {
+       FALSE
+     }
+   )
+ 
+   solaris <- tryCatch(
+     {
+       if (!is.null(si["sysname"])) {
+         grepl("SunOS", si["sysname"], ignore.case = TRUE)
+       } else {
+         FALSE
+       }
+     },
+     error = function(e) {
+       FALSE
+     }
+   )
+ 
+   # disable / enable if needed
+   if (.Platform$OS.type == "unix" && is_dev_version) {
+     Sys.setenv("RunAllinsightStanTests" = "yes")
+   } else {
+     Sys.setenv("RunAllinsightStanTests" = "no")
+   }
+ 
+   # if (!osx && !solaris) {
+   #   test_check("insight")
+   # }
+ 
+   test_check("insight")
+ }
Loading required package: testthat
Some of the variables were in matrix-format - probably you used
  `scale()` on your data?
  If so, and you get an error, please try `datawizard::standardize()` to
  standardize your data.
Confidence intervals are not yet supported for models of class `mlm`.

Iteration 1 - deviance = 39.74973 - criterion = 0.8590917
Iteration 2 - deviance = 10.50328 - criterion = 2.758244
Iteration 3 - deviance = 9.231325 - criterion = 0.1363107
Iteration 4 - deviance = 9.227742 - criterion = 0.0003840654
Iteration 5 - deviance = 9.227742 - criterion = 3.446475e-09
converged
Confidence intervals are not yet supported for models of class
  `multinom`.
Confidence intervals are not yet supported for models of class
  `multinom`.
Confidence intervals are not yet supported for models of class
  `multinom`.
Confidence intervals are not yet supported for models of class
  `multinom`.
Confidence intervals are not yet supported for models of class
  `multinom`.
Confidence intervals are not yet supported for models of class
  `multinom`.
Confidence intervals are not yet supported for models of class
  `multinom`.
Confidence intervals are not yet supported for models of class
  `multinom`.

Re-fitting to get Hessian


Re-fitting to get Hessian

boundary (singular) fit: see help('isSingular')
boundary (singular) fit: see help('isSingular')
[ FAIL 0 | WARN 1 | SKIP 15 | PASS 2537 ]

══ Skipped tests ═══════════════════════════════════════════════════════════════
• On CRAN (5)
• isFALSE(run_stan) is TRUE (5)
• works interactively (5)

[ FAIL 0 | WARN 1 | SKIP 15 | PASS 2537 ]
> 
> proc.time()
   user  system elapsed 
 129.17   18.71  158.54 
