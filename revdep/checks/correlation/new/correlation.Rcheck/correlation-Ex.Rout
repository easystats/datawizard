
R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "correlation"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('correlation')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cor_lower")
> ### * cor_lower
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cor_lower
> ### Title: Return the upper or lower triangular part
> ### Aliases: cor_lower
> 
> ### ** Examples
> 
> x <- correlation(mtcars, redundant = TRUE) # Generate full matrix
> x <- cor_lower(x)
> 
> if (require("ggplot2")) {
+   ggplot(x, aes(x = Parameter2, y = Parameter1, fill = r)) +
+     geom_tile()
+ }
Loading required package: ggplot2
> 
> # Sorted
> x <- correlation(mtcars, redundant = TRUE) # Generate full matrix
> x <- cor_sort(x)
> x <- cor_lower(x)
> 
> if (require("ggplot2")) {
+   ggplot(x, aes(x = Parameter2, y = Parameter1, fill = r)) +
+     geom_tile()
+ }
> 
> 
> 
> cleanEx()

detaching 'package:ggplot2'

> nameEx("cor_smooth")
> ### * cor_smooth
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cor_smooth
> ### Title: Smooth a non-positive definite correlation matrix to make it
> ###   positive definite
> ### Aliases: cor_smooth is.positive_definite is_positive_definite
> 
> ### ** Examples
> 
> set.seed(123)
> data <- as.matrix(mtcars)
> # Make missing data so pairwise correlation matrix is non-positive definite
> data[sample(seq_len(352), size = 60)] <- NA
> data <- as.data.frame(data)
> x <- correlation(data)
> is.positive_definite(x)
[1] FALSE
> 
> smoothed <- cor_smooth(x)
[31mmpg - cyl: -0.85 -> -0.82
[39m
[32mmpg - disp: no change (-0.82)
[39m
[32mmpg - hp: no change (-0.76)
[39m
[32mmpg - drat: no change (0.58)
[39m
[32mmpg - wt: no change (-0.84)
[39m
[32mmpg - qsec: no change (0.32)
[39m
[32mmpg - vs: no change (0.64)
[39m
[31mmpg - am: 0.55 -> 0.54
[39m
[32mmpg - gear: no change (0.42)
[39m
[32mmpg - carb: no change (-0.57)
[39m
[31mcyl - disp: 0.92 -> 0.89
[39m
[31mcyl - hp: 0.88 -> 0.82
[39m
[31mcyl - drat: -0.66 -> -0.64
[39m
[31mcyl - wt: 0.80 -> 0.78
[39m
[31mcyl - qsec: -0.47 -> -0.43
[39m
[31mcyl - vs: -0.80 -> -0.76
[39m
[31mcyl - am: -0.74 -> -0.66
[39m
[31mcyl - gear: -0.66 -> -0.64
[39m
[32mcyl - carb: no change (0.54)
[39m
[32mdisp - hp: no change (0.77)
[39m
[32mdisp - drat: no change (-0.57)
[39m
[31mdisp - wt: 0.88 -> 0.87
[39m
[31mdisp - qsec: -0.45 -> -0.43
[39m
[32mdisp - vs: no change (-0.74)
[39m
[31mdisp - am: -0.58 -> -0.56
[39m
[32mdisp - gear: no change (-0.52)
[39m
[32mdisp - carb: no change (0.56)
[39m
[32mhp - drat: no change (-0.41)
[39m
[31mhp - wt: 0.62 -> 0.60
[39m
[32mhp - qsec: no change (-0.65)
[39m
[32mhp - vs: no change (-0.71)
[39m
[31mhp - am: -0.22 -> -0.23
[39m
[32mhp - gear: no change (-0.14)
[39m
[31mhp - carb: 0.65 -> 0.64
[39m
[32mdrat - wt: no change (-0.66)
[39m
[32mdrat - qsec: no change (-0.19)
[39m
[32mdrat - vs: no change (0.22)
[39m
[31mdrat - am: 0.74 -> 0.73
[39m
[32mdrat - gear: no change (0.71)
[39m
[32mdrat - carb: no change (-0.06)
[39m
[31mwt - qsec: -0.09 -> -0.10
[39m
[32mwt - vs: no change (-0.56)
[39m
[31mwt - am: -0.72 -> -0.71
[39m
[31mwt - gear: -0.64 -> -0.63
[39m
[31mwt - carb: 0.50 -> 0.50
[39m
[32mqsec - vs: no change (0.73)
[39m
[31mqsec - am: -0.35 -> -0.32
[39m
[31mqsec - gear: -0.13 -> -0.14
[39m
[31mqsec - carb: -0.63 -> -0.61
[39m
[31mvs - am: 0.20 -> 0.20
[39m
[32mvs - gear: no change (0.32)
[39m
[31mvs - carb: -0.69 -> -0.68
[39m
[31mam - gear: 0.81 -> 0.79
[39m
[31mam - carb: -0.24 -> -0.22
[39m
[32mgear - carb: no change (0.03)
[39m
> 
> 
> 
> cleanEx()
> nameEx("cor_sort")
> ### * cor_sort
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cor_sort
> ### Title: Sort a correlation matrix to improve readability of groups and
> ###   clusters
> ### Aliases: cor_sort
> 
> ### ** Examples
> 
> x <- correlation(mtcars)
> 
> cor_sort(as.matrix(x))
            carb         wt         hp        cyl       disp        qsec
carb  1.00000000  0.4276059  0.7498125  0.5269883  0.3949769 -0.65624923
wt    0.42760594  1.0000000  0.6587479  0.7824958  0.8879799 -0.17471588
hp    0.74981247  0.6587479  1.0000000  0.8324475  0.7909486 -0.70822339
cyl   0.52698829  0.7824958  0.8324475  1.0000000  0.9020329 -0.59124207
disp  0.39497686  0.8879799  0.7909486  0.9020329  1.0000000 -0.43369788
qsec -0.65624923 -0.1747159 -0.7082234 -0.5912421 -0.4336979  1.00000000
vs   -0.56960714 -0.5549157 -0.7230967 -0.8108118 -0.7104159  0.74453544
mpg  -0.55092507 -0.8676594 -0.7761684 -0.8521620 -0.8475514  0.41868403
drat -0.09078980 -0.7124406 -0.4487591 -0.6999381 -0.7102139  0.09120476
am    0.05753435 -0.6924953 -0.2432043 -0.5226070 -0.5912270 -0.22986086
gear  0.27407284 -0.5832870 -0.1257043 -0.4926866 -0.5555692 -0.21268223
             vs        mpg        drat          am       gear
carb -0.5696071 -0.5509251 -0.09078980  0.05753435  0.2740728
wt   -0.5549157 -0.8676594 -0.71244065 -0.69249526 -0.5832870
hp   -0.7230967 -0.7761684 -0.44875912 -0.24320426 -0.1257043
cyl  -0.8108118 -0.8521620 -0.69993811 -0.52260705 -0.4926866
disp -0.7104159 -0.8475514 -0.71021393 -0.59122704 -0.5555692
qsec  0.7445354  0.4186840  0.09120476 -0.22986086 -0.2126822
vs    1.0000000  0.6640389  0.44027846  0.16834512  0.2060233
mpg   0.6640389  1.0000000  0.68117191  0.59983243  0.4802848
drat  0.4402785  0.6811719  1.00000000  0.71271113  0.6996101
am    0.1683451  0.5998324  0.71271113  1.00000000  0.7940588
gear  0.2060233  0.4802848  0.69961013  0.79405876  1.0000000
> cor_sort(x, hclust_method = "ward.D2") # It can also reorder the long form output
[34m# Correlation Matrix (pearson-method)[39m

Parameter1 | Parameter2 |     r |         95% CI | t(30) |         p
--------------------------------------------------------------------
wt         |       carb |  0.43 | [ 0.09,  0.68] |  2.59 | 0.205    
wt         |       qsec | -0.17 | [-0.49,  0.19] | -0.97 | > .999   
wt         |         vs | -0.55 | [-0.76, -0.26] | -3.65 | 0.023*   
wt         |         am | -0.69 | [-0.84, -0.45] | -5.26 | < .001***
wt         |       gear | -0.58 | [-0.77, -0.29] | -3.93 | 0.012*   
cyl        |         wt |  0.78 | [ 0.60,  0.89] |  6.88 | < .001***
cyl        |       disp |  0.90 | [ 0.81,  0.95] | 11.45 | < .001***
cyl        |         hp |  0.83 | [ 0.68,  0.92] |  8.23 | < .001***
cyl        |       carb |  0.53 | [ 0.22,  0.74] |  3.40 | 0.041*   
cyl        |       qsec | -0.59 | [-0.78, -0.31] | -4.02 | 0.010*   
cyl        |         vs | -0.81 | [-0.90, -0.64] | -7.59 | < .001***
cyl        |       drat | -0.70 | [-0.84, -0.46] | -5.37 | < .001***
cyl        |         am | -0.52 | [-0.74, -0.21] | -3.36 | 0.043*   
cyl        |       gear | -0.49 | [-0.72, -0.17] | -3.10 | 0.079    
disp       |         wt |  0.89 | [ 0.78,  0.94] | 10.58 | < .001***
disp       |         hp |  0.79 | [ 0.61,  0.89] |  7.08 | < .001***
disp       |       carb |  0.39 | [ 0.05,  0.65] |  2.35 | 0.303    
disp       |       qsec | -0.43 | [-0.68, -0.10] | -2.64 | 0.197    
disp       |         vs | -0.71 | [-0.85, -0.48] | -5.53 | < .001***
disp       |       drat | -0.71 | [-0.85, -0.48] | -5.53 | < .001***
disp       |         am | -0.59 | [-0.78, -0.31] | -4.02 | 0.010*   
disp       |       gear | -0.56 | [-0.76, -0.26] | -3.66 | 0.023*   
hp         |         wt |  0.66 | [ 0.40,  0.82] |  4.80 | 0.001**  
hp         |       carb |  0.75 | [ 0.54,  0.87] |  6.21 | < .001***
hp         |       qsec | -0.71 | [-0.85, -0.48] | -5.49 | < .001***
hp         |         vs | -0.72 | [-0.86, -0.50] | -5.73 | < .001***
hp         |       drat | -0.45 | [-0.69, -0.12] | -2.75 | 0.170    
hp         |         am | -0.24 | [-0.55,  0.12] | -1.37 | > .999   
hp         |       gear | -0.13 | [-0.45,  0.23] | -0.69 | > .999   
qsec       |       carb | -0.66 | [-0.82, -0.40] | -4.76 | 0.001**  
qsec       |         vs |  0.74 | [ 0.53,  0.87] |  6.11 | < .001***
qsec       |         am | -0.23 | [-0.54,  0.13] | -1.29 | > .999   
qsec       |       gear | -0.21 | [-0.52,  0.15] | -1.19 | > .999   
vs         |       carb | -0.57 | [-0.77, -0.28] | -3.80 | 0.017*   
vs         |         am |  0.17 | [-0.19,  0.49] |  0.94 | > .999   
vs         |       gear |  0.21 | [-0.15,  0.52] |  1.15 | > .999   
mpg        |         wt | -0.87 | [-0.93, -0.74] | -9.56 | < .001***
mpg        |        cyl | -0.85 | [-0.93, -0.72] | -8.92 | < .001***
mpg        |       disp | -0.85 | [-0.92, -0.71] | -8.75 | < .001***
mpg        |         hp | -0.78 | [-0.89, -0.59] | -6.74 | < .001***
mpg        |       carb | -0.55 | [-0.75, -0.25] | -3.62 | 0.024*   
mpg        |       qsec |  0.42 | [ 0.08,  0.67] |  2.53 | 0.222    
mpg        |         vs |  0.66 | [ 0.41,  0.82] |  4.86 | 0.001**  
mpg        |       drat |  0.68 | [ 0.44,  0.83] |  5.10 | < .001***
mpg        |         am |  0.60 | [ 0.32,  0.78] |  4.11 | 0.008**  
mpg        |       gear |  0.48 | [ 0.16,  0.71] |  3.00 | 0.097    
drat       |         wt | -0.71 | [-0.85, -0.48] | -5.56 | < .001***
drat       |       carb | -0.09 | [-0.43,  0.27] | -0.50 | > .999   
drat       |       qsec |  0.09 | [-0.27,  0.43] |  0.50 | > .999   
drat       |         vs |  0.44 | [ 0.11,  0.68] |  2.69 | 0.187    
drat       |         am |  0.71 | [ 0.48,  0.85] |  5.57 | < .001***
drat       |       gear |  0.70 | [ 0.46,  0.84] |  5.36 | < .001***
am         |       carb |  0.06 | [-0.30,  0.40] |  0.32 | > .999   
am         |       gear |  0.79 | [ 0.62,  0.89] |  7.16 | < .001***
gear       |       carb |  0.27 | [-0.08,  0.57] |  1.56 | > .999   

p-value adjustment method: Holm (1979)
Observations: 32
> cor_sort(summary(x, redundant = TRUE)) # As well as from the summary
[34m# Correlation Matrix (pearson-method)[39m

Parameter |     carb |       wt |       hp |      cyl |     disp |     qsec |       vs |      mpg |     drat |       am |     gear
----------------------------------------------------------------------------------------------------------------------------------
carb      |          |  0.43*** |  0.75*** |  0.53*** |  0.39*** | -0.66*** |    -0.57 |  -0.55** |  -0.09** |     0.06 |    0.27*
wt        |  0.43*** |          |  0.66*** |  0.78*** |  0.89*** | -0.17*** |   -0.55* | -0.87*** |   -0.71* |    -0.69 |   -0.58*
hp        |  0.75*** |  0.66*** |          |  0.83*** |  0.79*** | -0.71*** |    -0.72 | -0.78*** |   -0.45* |   -0.24* |    -0.13
cyl       |  0.53*** |  0.78*** |  0.83*** |          |     0.90 |  -0.59** | -0.81*** | -0.85*** |    -0.70 |    -0.52 | -0.49***
disp      |  0.39*** |  0.89*** |  0.79*** |     0.90 |          | -0.43*** |    -0.71 |    -0.85 | -0.71*** | -0.59*** |    -0.56
qsec      | -0.66*** | -0.17*** | -0.71*** |  -0.59** | -0.43*** |          |     0.74 |    0.42* |  0.09*** |   -0.23* |    -0.21
vs        |    -0.57 |   -0.55* |    -0.72 | -0.81*** |    -0.71 |     0.74 |          |  0.66*** |     0.44 |     0.17 |   0.21**
mpg       |  -0.55** | -0.87*** | -0.78*** | -0.85*** |    -0.85 |    0.42* |  0.66*** |          |     0.68 |     0.60 |    0.48*
drat      |  -0.09** |   -0.71* |   -0.45* |    -0.70 | -0.71*** |  0.09*** |     0.44 |     0.68 |          |  0.71*** |     0.70
am        |     0.06 |    -0.69 |   -0.24* |    -0.52 | -0.59*** |   -0.23* |     0.17 |     0.60 |  0.71*** |          |     0.79
gear      |    0.27* |   -0.58* |    -0.13 | -0.49*** |    -0.56 |    -0.21 |   0.21** |    0.48* |     0.70 |     0.79 |         

p-value adjustment method: Holm (1979)
> 
> 
> 
> cleanEx()
> nameEx("cor_test")
> ### * cor_test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cor_test
> ### Title: Correlation test
> ### Aliases: cor_test
> 
> ### ** Examples
> 
> library(correlation)
> 
> cor_test(iris, "Sepal.Length", "Sepal.Width")
Parameter1   |  Parameter2 |     r |        95% CI | t(148) |     p
-------------------------------------------------------------------
Sepal.Length | Sepal.Width | -0.12 | [-0.27, 0.04] |  -1.44 | 0.152

Observations: 150
> cor_test(iris, "Sepal.Length", "Sepal.Width", method = "spearman")
Parameter1   |  Parameter2 |   rho |         95% CI |        S |      p
-----------------------------------------------------------------------
Sepal.Length | Sepal.Width | -0.17 | [-0.32,  0.00] | 6.56e+05 | 0.041*

Observations: 150
> ## Not run: 
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", method = "kendall")
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", method = "biweight")
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", method = "distance")
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", method = "percentage")
> ##D if (require("wdm", quietly = TRUE)) {
> ##D   cor_test(iris, "Sepal.Length", "Sepal.Width", method = "blomqvist")
> ##D }
> ##D if (require("Hmisc", quietly = TRUE)) {
> ##D   cor_test(iris, "Sepal.Length", "Sepal.Width", method = "hoeffding")
> ##D }
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", method = "gamma")
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", method = "gaussian")
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", method = "shepherd")
> ##D if (require("BayesFactor", quietly = TRUE)) {
> ##D   cor_test(iris, "Sepal.Length", "Sepal.Width", bayesian = TRUE)
> ##D }
> ##D 
> ##D # Robust (these two are equivalent)
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", method = "spearman")
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", method = "pearson", ranktransform = TRUE)
> ##D 
> ##D # Winsorized
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", winsorize = 0.2)
> ##D 
> ##D # Tetrachoric
> ##D if (require("psych", quietly = TRUE)) {
> ##D   data <- iris
> ##D   data$Sepal.Width_binary <- ifelse(data$Sepal.Width > 3, 1, 0)
> ##D   data$Petal.Width_binary <- ifelse(data$Petal.Width > 1.2, 1, 0)
> ##D   cor_test(data, "Sepal.Width_binary", "Petal.Width_binary", method = "tetrachoric")
> ##D 
> ##D   # Biserial
> ##D   cor_test(data, "Sepal.Width", "Petal.Width_binary", method = "biserial")
> ##D 
> ##D   # Polychoric
> ##D   data$Petal.Width_ordinal <- as.factor(round(data$Petal.Width))
> ##D   data$Sepal.Length_ordinal <- as.factor(round(data$Sepal.Length))
> ##D   cor_test(data, "Petal.Width_ordinal", "Sepal.Length_ordinal", method = "polychoric")
> ##D 
> ##D   # When one variable is continuous, will run 'polyserial' correlation
> ##D   cor_test(data, "Sepal.Width", "Sepal.Length_ordinal", method = "polychoric")
> ##D }
> ##D 
> ##D # Partial
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", partial = TRUE)
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", multilevel = TRUE)
> ##D cor_test(iris, "Sepal.Length", "Sepal.Width", partial_bayesian = TRUE)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("cor_text")
> ### * cor_text
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cor_text
> ### Title: Correlation text
> ### Aliases: cor_text
> 
> ### ** Examples
> 
> rez <- cor_test(mtcars, "mpg", "wt")
> 
> cor_text(rez)
[1] "r = -0.87, 95% CI [-0.93, -0.74], t(30) = -9.56, p < .001"
> cor_text(rez, show_statistic = FALSE, show_ci = FALSE, stars = TRUE)
[1] "r = -0.87, p < .001***"
> 
> rez <- correlation(mtcars)
> 
> cor_text(rez)
 [1] "r = -0.85, 95% CI [-0.93, -0.72], t(30) = -8.92, p < .001" 
 [2] "r = -0.85, 95% CI [-0.92, -0.71], t(30) = -8.75, p < .001" 
 [3] "r = -0.78, 95% CI [-0.89, -0.59], t(30) = -6.74, p < .001" 
 [4] "r = 0.68, 95% CI [0.44, 0.83], t(30) = 5.10, p < .001"     
 [5] "r = -0.87, 95% CI [-0.93, -0.74], t(30) = -9.56, p < .001" 
 [6] "r = 0.42, 95% CI [0.08, 0.67], t(30) = 2.53, p = 0.222"    
 [7] "r = 0.66, 95% CI [0.41, 0.82], t(30) = 4.86, p = 0.001"    
 [8] "r = 0.60, 95% CI [0.32, 0.78], t(30) = 4.11, p = 0.008"    
 [9] "r = 0.48, 95% CI [0.16, 0.71], t(30) = 3.00, p = 0.097"    
[10] "r = -0.55, 95% CI [-0.75, -0.25], t(30) = -3.62, p = 0.024"
[11] "r = 0.90, 95% CI [0.81, 0.95], t(30) = 11.45, p < .001"    
[12] "r = 0.83, 95% CI [0.68, 0.92], t(30) = 8.23, p < .001"     
[13] "r = -0.70, 95% CI [-0.84, -0.46], t(30) = -5.37, p < .001" 
[14] "r = 0.78, 95% CI [0.60, 0.89], t(30) = 6.88, p < .001"     
[15] "r = -0.59, 95% CI [-0.78, -0.31], t(30) = -4.02, p = 0.010"
[16] "r = -0.81, 95% CI [-0.90, -0.64], t(30) = -7.59, p < .001" 
[17] "r = -0.52, 95% CI [-0.74, -0.21], t(30) = -3.36, p = 0.043"
[18] "r = -0.49, 95% CI [-0.72, -0.17], t(30) = -3.10, p = 0.079"
[19] "r = 0.53, 95% CI [0.22, 0.74], t(30) = 3.40, p = 0.041"    
[20] "r = 0.79, 95% CI [0.61, 0.89], t(30) = 7.08, p < .001"     
[21] "r = -0.71, 95% CI [-0.85, -0.48], t(30) = -5.53, p < .001" 
[22] "r = 0.89, 95% CI [0.78, 0.94], t(30) = 10.58, p < .001"    
[23] "r = -0.43, 95% CI [-0.68, -0.10], t(30) = -2.64, p = 0.197"
[24] "r = -0.71, 95% CI [-0.85, -0.48], t(30) = -5.53, p < .001" 
[25] "r = -0.59, 95% CI [-0.78, -0.31], t(30) = -4.02, p = 0.010"
[26] "r = -0.56, 95% CI [-0.76, -0.26], t(30) = -3.66, p = 0.023"
[27] "r = 0.39, 95% CI [0.05, 0.65], t(30) = 2.35, p = 0.303"    
[28] "r = -0.45, 95% CI [-0.69, -0.12], t(30) = -2.75, p = 0.170"
[29] "r = 0.66, 95% CI [0.40, 0.82], t(30) = 4.80, p = 0.001"    
[30] "r = -0.71, 95% CI [-0.85, -0.48], t(30) = -5.49, p < .001" 
[31] "r = -0.72, 95% CI [-0.86, -0.50], t(30) = -5.73, p < .001" 
[32] "r = -0.24, 95% CI [-0.55, 0.12], t(30) = -1.37, p > .999"  
[33] "r = -0.13, 95% CI [-0.45, 0.23], t(30) = -0.69, p > .999"  
[34] "r = 0.75, 95% CI [0.54, 0.87], t(30) = 6.21, p < .001"     
[35] "r = -0.71, 95% CI [-0.85, -0.48], t(30) = -5.56, p < .001" 
[36] "r = 0.09, 95% CI [-0.27, 0.43], t(30) = 0.50, p > .999"    
[37] "r = 0.44, 95% CI [0.11, 0.68], t(30) = 2.69, p = 0.187"    
[38] "r = 0.71, 95% CI [0.48, 0.85], t(30) = 5.57, p < .001"     
[39] "r = 0.70, 95% CI [0.46, 0.84], t(30) = 5.36, p < .001"     
[40] "r = -0.09, 95% CI [-0.43, 0.27], t(30) = -0.50, p > .999"  
[41] "r = -0.17, 95% CI [-0.49, 0.19], t(30) = -0.97, p > .999"  
[42] "r = -0.55, 95% CI [-0.76, -0.26], t(30) = -3.65, p = 0.023"
[43] "r = -0.69, 95% CI [-0.84, -0.45], t(30) = -5.26, p < .001" 
[44] "r = -0.58, 95% CI [-0.77, -0.29], t(30) = -3.93, p = 0.012"
[45] "r = 0.43, 95% CI [0.09, 0.68], t(30) = 2.59, p = 0.205"    
[46] "r = 0.74, 95% CI [0.53, 0.87], t(30) = 6.11, p < .001"     
[47] "r = -0.23, 95% CI [-0.54, 0.13], t(30) = -1.29, p > .999"  
[48] "r = -0.21, 95% CI [-0.52, 0.15], t(30) = -1.19, p > .999"  
[49] "r = -0.66, 95% CI [-0.82, -0.40], t(30) = -4.76, p = 0.001"
[50] "r = 0.17, 95% CI [-0.19, 0.49], t(30) = 0.94, p > .999"    
[51] "r = 0.21, 95% CI [-0.15, 0.52], t(30) = 1.15, p > .999"    
[52] "r = -0.57, 95% CI [-0.77, -0.28], t(30) = -3.80, p = 0.017"
[53] "r = 0.79, 95% CI [0.62, 0.89], t(30) = 7.16, p < .001"     
[54] "r = 0.06, 95% CI [-0.30, 0.40], t(30) = 0.32, p > .999"    
[55] "r = 0.27, 95% CI [-0.08, 0.57], t(30) = 1.56, p > .999"    
> 
> 
> 
> cleanEx()
> nameEx("cor_to_cov")
> ### * cor_to_cov
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cor_to_cov
> ### Title: Convert a correlation to covariance
> ### Aliases: cor_to_cov
> 
> ### ** Examples
> 
> cor <- cor(iris[1:4])
> cov(iris[1:4])
             Sepal.Length Sepal.Width Petal.Length Petal.Width
Sepal.Length    0.6856935  -0.0424340    1.2743154   0.5162707
Sepal.Width    -0.0424340   0.1899794   -0.3296564  -0.1216394
Petal.Length    1.2743154  -0.3296564    3.1162779   1.2956094
Petal.Width     0.5162707  -0.1216394    1.2956094   0.5810063
> 
> cor_to_cov(cor, sd = sapply(iris[1:4], sd))
             Sepal.Length Sepal.Width Petal.Length Petal.Width
Sepal.Length    0.6856935  -0.0424340    1.2743154   0.5162707
Sepal.Width    -0.0424340   0.1899794   -0.3296564  -0.1216394
Petal.Length    1.2743154  -0.3296564    3.1162779   1.2956094
Petal.Width     0.5162707  -0.1216394    1.2956094   0.5810063
> cor_to_cov(cor, variance = sapply(iris[1:4], var))
             Sepal.Length Sepal.Width Petal.Length Petal.Width
Sepal.Length    0.6856935  -0.0424340    1.2743154   0.5162707
Sepal.Width    -0.0424340   0.1899794   -0.3296564  -0.1216394
Petal.Length    1.2743154  -0.3296564    3.1162779   1.2956094
Petal.Width     0.5162707  -0.1216394    1.2956094   0.5810063
> 
> 
> 
> cleanEx()
> nameEx("cor_to_p")
> ### * cor_to_p
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cor_to_ci
> ### Title: Convert correlation to p-values and CIs
> ### Aliases: cor_to_ci cor_to_p
> 
> ### ** Examples
> 
> cor.test(iris$Sepal.Length, iris$Sepal.Width)

	Pearson's product-moment correlation

data:  iris$Sepal.Length and iris$Sepal.Width
t = -1.4403, df = 148, p-value = 0.1519
alternative hypothesis: true correlation is not equal to 0
95 percent confidence interval:
 -0.27269325  0.04351158
sample estimates:
       cor 
-0.1175698 

> cor_to_p(-0.1175698, n = 150)
$p
[1] 0.1518982

$statistic
[1] -1.440287

> cor_to_p(cor(iris[1:4]), n = 150)
$p
             Sepal.Length  Sepal.Width Petal.Length  Petal.Width
Sepal.Length 0.000000e+00 1.518983e-01 1.038667e-47 2.325498e-37
Sepal.Width  1.518983e-01 0.000000e+00 4.513314e-08 4.073229e-06
Petal.Length 1.038667e-47 4.513314e-08 0.000000e+00 4.675004e-86
Petal.Width  2.325498e-37 4.073229e-06 4.675004e-86 0.000000e+00

$statistic
             Sepal.Length Sepal.Width Petal.Length Petal.Width
Sepal.Length          Inf   -1.440287    21.646019   17.296454
Sepal.Width     -1.440287         Inf    -5.768449   -4.786461
Petal.Length    21.646019   -5.768449          Inf   43.387237
Petal.Width     17.296454   -4.786461    43.387237         Inf

> cor_to_ci(-0.1175698, n = 150)
$CI_low
[1] -0.2726933

$CI_high
[1] 0.04351157

> cor_to_ci(cor(iris[1:4]), n = 150)
$CI_low
             Sepal.Length Sepal.Width Petal.Length Petal.Width
Sepal.Length    1.0000000  -0.2726932    0.8270363   0.7568971
Sepal.Width    -0.2726932   1.0000000   -0.5508771  -0.4972130
Petal.Length    0.8270363  -0.5508771    1.0000000   0.9490525
Petal.Width     0.7568971  -0.4972130    0.9490525   1.0000000

$CI_high
             Sepal.Length Sepal.Width Petal.Length Petal.Width
Sepal.Length   1.00000000  0.04351158    0.9055080   0.8648361
Sepal.Width    0.04351158  1.00000000   -0.2879499  -0.2186966
Petal.Length   0.90550805 -0.28794993    1.0000000   0.9729853
Petal.Width    0.86483606 -0.21869663    0.9729853   1.0000000

> 
> cor.test(iris$Sepal.Length, iris$Sepal.Width, method = "spearman")
Warning in cor.test.default(iris$Sepal.Length, iris$Sepal.Width, method = "spearman") :
  Cannot compute exact p-value with ties

	Spearman's rank correlation rho

data:  iris$Sepal.Length and iris$Sepal.Width
S = 656283, p-value = 0.04137
alternative hypothesis: true rho is not equal to 0
sample estimates:
       rho 
-0.1667777 

> cor_to_p(-0.1667777, n = 150, method = "spearman")
$p
[1] 0.04136794

$statistic
[1] -2.057758

> cor_to_ci(-0.1667777, ci = 0.95, n = 150)
$CI_low
[1] -0.3185257

$CI_high
[1] -0.006695121

> 
> cor.test(iris$Sepal.Length, iris$Sepal.Width, method = "kendall")

	Kendall's rank correlation tau

data:  iris$Sepal.Length and iris$Sepal.Width
z = -1.3318, p-value = 0.1829
alternative hypothesis: true tau is not equal to 0
sample estimates:
        tau 
-0.07699679 

> cor_to_p(-0.07699679, n = 150, method = "kendall")
Warning: Estimation for Kendall's correlation is not perfectly correct. Help us to improve it.
$p
[1] 0.1620545

$statistic
[1] -1.398195

> 
> 
> 
> cleanEx()
> nameEx("cor_to_pcor")
> ### * cor_to_pcor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cor_to_pcor
> ### Title: Correlation Matrix to (Semi) Partial Correlations
> ### Aliases: cor_to_pcor pcor_to_cor cor_to_spcor
> 
> ### ** Examples
> 
> cor <- cor(iris[1:4])
> 
> # Partialize
> cor_to_pcor(cor)
             Sepal.Length Sepal.Width Petal.Length Petal.Width
Sepal.Length    1.0000000   0.6285707    0.7190656  -0.3396174
Sepal.Width     0.6285707   1.0000000   -0.6152919   0.3526260
Petal.Length    0.7190656  -0.6152919    1.0000000   0.8707698
Petal.Width    -0.3396174   0.3526260    0.8707698   1.0000000
> cor_to_spcor(cor, cov = sapply(iris[1:4], sd))
             Sepal.Length Sepal.Width Petal.Length Petal.Width
Sepal.Length   1.00000000  0.30389212    0.3890689  -0.1357714
Sepal.Width    0.55758743  1.00000000   -0.5385056   0.2599849
Petal.Length   0.18506103 -0.13959991    1.0000000   0.3167424
Petal.Width   -0.09001634  0.09394365    0.4415000   1.0000000
> 
> # Inverse
> round(pcor_to_cor(cor_to_pcor(cor)) - cor, 2) # Should be 0
             Sepal.Length Sepal.Width Petal.Length Petal.Width
Sepal.Length            0           0            0           0
Sepal.Width             0           0            0           0
Petal.Length            0           0            0           0
Petal.Width             0           0            0           0
> 
> 
> 
> cleanEx()
> nameEx("correlation")
> ### * correlation
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: correlation
> ### Title: Correlation Analysis
> ### Aliases: correlation
> 
> ### ** Examples
> 
> 
> library(correlation)
> results <- correlation(iris)
> 
> results
[34m# Correlation Matrix (pearson-method)[39m

Parameter1   |   Parameter2 |     r |         95% CI | t(148) |         p
-------------------------------------------------------------------------
Sepal.Length |  Sepal.Width | -0.12 | [-0.27,  0.04] |  -1.44 | 0.152    
Sepal.Length | Petal.Length |  0.87 | [ 0.83,  0.91] |  21.65 | < .001***
Sepal.Length |  Petal.Width |  0.82 | [ 0.76,  0.86] |  17.30 | < .001***
Sepal.Width  | Petal.Length | -0.43 | [-0.55, -0.29] |  -5.77 | < .001***
Sepal.Width  |  Petal.Width | -0.37 | [-0.50, -0.22] |  -4.79 | < .001***
Petal.Length |  Petal.Width |  0.96 | [ 0.95,  0.97] |  43.39 | < .001***

p-value adjustment method: Holm (1979)
Observations: 150
> summary(results)
[34m# Correlation Matrix (pearson-method)[39m

Parameter    | Petal.Width | Petal.Length | Sepal.Width
-------------------------------------------------------
Sepal.Length |     0.82*** |      0.87*** |       -0.12
Sepal.Width  |    -0.37*** |     -0.43*** |            
Petal.Length |     0.96*** |              |            

p-value adjustment method: Holm (1979)
> summary(results, redundant = TRUE)
[34m# Correlation Matrix (pearson-method)[39m

Parameter    | Sepal.Length | Sepal.Width | Petal.Length | Petal.Width
----------------------------------------------------------------------
Sepal.Length |              |       -0.12 |      0.87*** |     0.82***
Sepal.Width  |        -0.12 |             |     -0.43*** |    -0.37***
Petal.Length |      0.87*** |    -0.43*** |              |     0.96***
Petal.Width  |      0.82*** |    -0.37*** |      0.96*** |            

p-value adjustment method: Holm (1979)
> 
> # pipe-friendly usage with  grouped dataframes from {dplyr} package
> if (require("poorman")) {
+   iris %>%
+     correlation(select = "Petal.Width", select2 = "Sepal.Length")
+ 
+   # Grouped dataframe
+   # grouped correlations
+   iris %>%
+     group_by(Species) %>%
+     correlation()
+ 
+   # selecting specific variables for correlation
+   mtcars %>%
+     group_by(am) %>%
+     correlation(
+       select = c("cyl", "wt"),
+       select2 = c("hp")
+     )
+ }
Loading required package: poorman

  I'd seen my father. He was a poor man, and I watched him do astonishing things.
    - Sidney Poitier

Attaching package: 'poorman'

The following objects are masked from 'package:stats':

    filter, lag

[34m# Correlation Matrix (pearson-method)[39m

Group | Parameter1 | Parameter2 |    r |       95% CI |    t | df |         p
-----------------------------------------------------------------------------
0     |        cyl |         hp | 0.85 | [0.64, 0.94] | 6.53 | 17 | < .001***
0     |         wt |         hp | 0.68 | [0.33, 0.87] | 3.82 | 17 | 0.001**  
1     |        cyl |         hp | 0.90 | [0.69, 0.97] | 6.87 | 11 | < .001***
1     |         wt |         hp | 0.81 | [0.48, 0.94] | 4.66 | 11 | < .001***

p-value adjustment method: Holm (1979)
Observations: 13-19
> 
> # supplying custom variable names
> correlation(anscombe, select = c("x1", "x2"), rename = c("var1", "var2"))
[34m# Correlation Matrix (pearson-method)[39m

Parameter1 | Parameter2 |    r |       95% CI | t(9) |         p
----------------------------------------------------------------
var1       |       var2 | 1.00 | [1.00, 1.00] |  Inf | < .001***

p-value adjustment method: Holm (1979)
Observations: 11
> 
> # automatic selection of correlation method
> correlation(mtcars[-2], method = "auto")
[34m# Correlation Matrix (auto-method)[39m

Parameter1 | Parameter2 |     r |         95% CI | t(30) |         p
--------------------------------------------------------------------
mpg        |       disp | -0.85 | [-0.92, -0.71] | -8.75 | < .001***
mpg        |         hp | -0.78 | [-0.89, -0.59] | -6.74 | < .001***
mpg        |       drat |  0.68 | [ 0.44,  0.83] |  5.10 | < .001***
mpg        |         wt | -0.87 | [-0.93, -0.74] | -9.56 | < .001***
mpg        |       qsec |  0.42 | [ 0.08,  0.67] |  2.53 | 0.222    
mpg        |         vs |  0.66 | [ 0.41,  0.82] |  4.86 | < .001***
mpg        |         am |  0.60 | [ 0.32,  0.78] |  4.11 | 0.007**  
mpg        |       gear |  0.48 | [ 0.16,  0.71] |  3.00 | 0.097    
mpg        |       carb | -0.55 | [-0.75, -0.25] | -3.62 | 0.021*   
disp       |         hp |  0.79 | [ 0.61,  0.89] |  7.08 | < .001***
disp       |       drat | -0.71 | [-0.85, -0.48] | -5.53 | < .001***
disp       |         wt |  0.89 | [ 0.78,  0.94] | 10.58 | < .001***
disp       |       qsec | -0.43 | [-0.68, -0.10] | -2.64 | 0.197    
disp       |         vs | -0.71 | [-0.85, -0.48] | -5.53 | < .001***
disp       |         am | -0.59 | [-0.78, -0.31] | -4.02 | 0.009**  
disp       |       gear | -0.56 | [-0.76, -0.26] | -3.66 | 0.020*   
disp       |       carb |  0.39 | [ 0.05,  0.65] |  2.35 | 0.303    
hp         |       drat | -0.45 | [-0.69, -0.12] | -2.75 | 0.170    
hp         |         wt |  0.66 | [ 0.40,  0.82] |  4.80 | 0.001**  
hp         |       qsec | -0.71 | [-0.85, -0.48] | -5.49 | < .001***
hp         |         vs | -0.72 | [-0.86, -0.50] | -5.73 | < .001***
hp         |         am | -0.24 | [-0.55,  0.12] | -1.37 | > .999   
hp         |       gear | -0.13 | [-0.45,  0.23] | -0.69 | > .999   
hp         |       carb |  0.75 | [ 0.54,  0.87] |  6.21 | < .001***
drat       |         wt | -0.71 | [-0.85, -0.48] | -5.56 | < .001***
drat       |       qsec |  0.09 | [-0.27,  0.43] |  0.50 | > .999   
drat       |         vs |  0.44 | [ 0.11,  0.68] |  2.69 | 0.187    
drat       |         am |  0.71 | [ 0.48,  0.85] |  5.57 | < .001***
drat       |       gear |  0.70 | [ 0.46,  0.84] |  5.36 | < .001***
drat       |       carb | -0.09 | [-0.43,  0.27] | -0.50 | > .999   
wt         |       qsec | -0.17 | [-0.49,  0.19] | -0.97 | > .999   
wt         |         vs | -0.55 | [-0.76, -0.26] | -3.65 | 0.020*   
wt         |         am | -0.69 | [-0.84, -0.45] | -5.26 | < .001***
wt         |       gear | -0.58 | [-0.77, -0.29] | -3.93 | 0.011*   
wt         |       carb |  0.43 | [ 0.09,  0.68] |  2.59 | 0.205    
qsec       |         vs |  0.74 | [ 0.53,  0.87] |  6.11 | < .001***
qsec       |         am | -0.23 | [-0.54,  0.13] | -1.29 | > .999   
qsec       |       gear | -0.21 | [-0.52,  0.15] | -1.19 | > .999   
qsec       |       carb | -0.66 | [-0.82, -0.40] | -4.76 | 0.001**  
vs         |         am |  0.26 | [-0.09,  0.56] |  1.50 | > .999   
vs         |       gear |  0.21 | [-0.15,  0.52] |  1.15 | > .999   
vs         |       carb | -0.57 | [-0.77, -0.28] | -3.80 | 0.015*   
am         |       gear |  0.79 | [ 0.62,  0.89] |  7.16 | < .001***
am         |       carb |  0.06 | [-0.30,  0.40] |  0.32 | > .999   
gear       |       carb |  0.27 | [-0.08,  0.57] |  1.56 | > .999   

p-value adjustment method: Holm (1979)
Observations: 32
> 
> 
> 
> 
> cleanEx()

detaching 'package:poorman'

> nameEx("display.easycormatrix")
> ### * display.easycormatrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: display.easycormatrix
> ### Title: Export tables into different output formats
> ### Aliases: display.easycormatrix print_md.easycorrelation
> ###   print_html.easycorrelation print_md.easycormatrix
> ###   print_html.easycormatrix
> 
> ### ** Examples
> 
> data(iris)
> corr <- correlation(iris)
> display(corr)
 [1] "Table: Correlation Matrix (pearson-method)"                                  
 [2] ""                                                                            
 [3] "|Parameter1   |   Parameter2 |     r |         95% CI | t(148) |         p |"
 [4] "|:------------|:------------:|:-----:|:--------------:|:------:|:---------:|"
 [5] "|Sepal.Length |  Sepal.Width | -0.12 |  (-0.27, 0.04) |  -1.44 | 0.152     |"
 [6] "|Sepal.Length | Petal.Length |  0.87 |   (0.83, 0.91) |  21.65 | < .001*** |"
 [7] "|Sepal.Length |  Petal.Width |  0.82 |   (0.76, 0.86) |  17.30 | < .001*** |"
 [8] "|Sepal.Width  | Petal.Length | -0.43 | (-0.55, -0.29) |  -5.77 | < .001*** |"
 [9] "|Sepal.Width  |  Petal.Width | -0.37 | (-0.50, -0.22) |  -4.79 | < .001*** |"
[10] "|Petal.Length |  Petal.Width |  0.96 |   (0.95, 0.97) |  43.39 | < .001*** |"
[11] "p-value adjustment method: Holm (1979)"                                      
[12] "Observations: 150"                                                           
attr(,"format")
[1] "pipe"
attr(,"class")
[1] "knitr_kable" "character"  
> 
> s <- summary(corr)
> display(s)
[1] "Table: Correlation Matrix (pearson-method)"                
[2] ""                                                          
[3] "|Parameter    | Petal.Width | Petal.Length | Sepal.Width |"
[4] "|:------------|:-----------:|:------------:|:-----------:|"
[5] "|Sepal.Length |     0.82*** |      0.87*** |       -0.12 |"
[6] "|Sepal.Width  |    -0.37*** |     -0.43*** |             |"
[7] "|Petal.Length |     0.96*** |              |             |"
[8] "p-value adjustment method: Holm (1979)"                    
attr(,"format")
[1] "pipe"
attr(,"class")
[1] "knitr_kable" "character"  
> 
> 
> 
> cleanEx()
> nameEx("matrix_inverse")
> ### * matrix_inverse
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: matrix_inverse
> ### Title: Matrix Inversion
> ### Aliases: matrix_inverse
> 
> ### ** Examples
> 
> m <- cor(iris[1:4])
> matrix_inverse(m)
             Sepal.Length Sepal.Width Petal.Length Petal.Width
Sepal.Length     7.072722   -2.422965   -10.692191    3.622961
Sepal.Width     -2.422965    2.100872     4.986386   -2.050192
Petal.Length   -10.692191    4.986386    31.261498  -19.529388
Petal.Width      3.622961   -2.050192   -19.529388   16.090175
> 
> 
> 
> cleanEx()
> nameEx("visualisation_recipe.easycormatrix")
> ### * visualisation_recipe.easycormatrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: visualisation_recipe.easycor_test
> ### Title: Visualisation Recipe for 'correlation' Objects
> ### Aliases: visualisation_recipe.easycor_test
> ###   visualisation_recipe.easycormatrix
> ###   visualisation_recipe.easycorrelation
> 
> ### ** Examples
> 
> # ==============================================
> # Correlation Matrix
> # ==============================================
> if (require("see")) {
+   rez <- correlation(mtcars)
+ 
+   x <- cor_sort(as.matrix(rez))
+   layers <- visualisation_recipe(x)
+   layers
+   plot(layers)
+ 
+   #' Get more details using `summary()`
+   x <- summary(rez, redundant = TRUE, digits = 3)
+   plot(visualisation_recipe(x))
+ 
+   # Customize
+   x <- summary(rez)
+   layers <- visualisation_recipe(x,
+     show_data = "points",
+     scale = list(range = c(10, 20)),
+     scale_fill = list(
+       high = "#FF5722",
+       low = "#673AB7",
+       name = "r"
+     ),
+     text = list(color = "white"),
+     labs = list(title = "My Plot")
+   )
+   plot(layers) + theme_modern()
+ }
Loading required package: see
Error in vapply(data, x, FUN.VALUE = logical(1L)) : 
  values must be length 1,
 but FUN(X[[1]]) result is length 0
Calls: visualisation_recipe ... .select_nse -> .eval_expr -> .select_symbol -> which -> vapply
Execution halted
