
R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "report"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('report')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cite_easystats")
> ### * cite_easystats
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cite_easystats
> ### Title: Cite the easystats ecosystem
> ### Aliases: cite_easystats summary.cite_easystats print.cite_easystats
> 
> ### ** Examples
> 
> 
> ## Not run: 
> ##D # Cite just the 'easystats' umbrella package:
> ##D cite_easystats()
> ##D summary(cite_easystats(), what = "all")
> ##D 
> ##D # Cite every easystats package:
> ##D cite_easystats(packages = "all")
> ##D summary(cite_easystats(packages = "all"), what = "all")
> ##D 
> ##D # Cite specific packages:
> ##D cite_easystats(packages = c("modelbased", "see"))
> ##D summary(cite_easystats(packages = c("modelbased", "see")), what = "all")
> ##D 
> ##D # To cite easystats packages in an RMarkdown document, use:
> ##D 
> ##D ## In-text citations:
> ##D print(cite_easystats(format = "markdown"), what = "intext")
> ##D 
> ##D ## Bibliography (print with the  `output = 'asis'` option on the code chunk)
> ##D print(cite_easystats(format = "markdown"), what = "refs")
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("format_citation")
> ### * format_citation
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: format_citation
> ### Title: Citation formatting
> ### Aliases: format_citation cite_citation clean_citation
> 
> ### ** Examples
> 
> library(report)
> 
> citation <- "Makowski, D., Ben-Shachar, M. S., Patil, I., & Ludecke, D. (2020).
+ Methods and Algorithms for Correlation Analysis in R. Journal of Open Source
+ Software, 5(51), 2306."
> 
> format_citation(citation, authorsdate = TRUE)
[1] "Makowski, Ben-Shachar, Patil, & Ludecke (2020)"
> format_citation(citation, authorsdate = TRUE, short = TRUE)
[1] "Makowski et al. (2020)"
> format_citation(citation, authorsdate = TRUE, short = TRUE, intext = TRUE)
[1] "Makowski et al., 2020"
> 
> cite_citation(citation)
[1] "(Makowski et al., 2020)"
> clean_citation(citation())
[1] "R Core Team (2022). _R: A Language and Environment for StatisticalComputing_. R Foundation for Statistical Computing, Vienna, Austria.<https://www.R-project.org/>."
> 
> 
> 
> cleanEx()
> nameEx("format_formula")
> ### * format_formula
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: format_algorithm
> ### Title: Convenient formatting of text components
> ### Aliases: format_algorithm format_formula format_model
> 
> ### ** Examples
> 
> model <- lm(Sepal.Length ~ Species, data = iris)
> format_algorithm(model)
[1] "OLS"
> 
> if (require("lme4")) {
+   model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
+   format_algorithm(model)
+ }
Loading required package: lme4
Loading required package: Matrix
[1] "REML and nloptwrap optimizer"
> model <- lm(Sepal.Length ~ Species, data = iris)
> format_formula(model)
[1] "formula: Sepal.Length ~ Species"
> 
> if (require("lme4")) {
+   model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
+   format_formula(model)
+   format_formula(model, "random")
+ }
[1] "formula: ~1 | Species"
> model <- lm(Sepal.Length ~ Species, data = iris)
> format_model(model)
[1] "linear model"
> 
> if (require("lme4")) {
+   model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
+   format_model(model)
+ }
[1] "linear mixed model"
> 
> 
> 
> cleanEx()

detaching 'package:lme4', 'package:Matrix'

> nameEx("report")
> ### * report
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report
> ### Title: Automatic reporting of R objects
> ### Aliases: report
> 
> ### ** Examples
> 
> 
> library(report)
> 
> model <- t.test(mpg ~ am, data = mtcars)
> r <- report(model)
Warning: Unable to retrieve data from htest object.
  Returning an [1mapproximate[22m effect size using t_to_d().
> 
> # Text
> r
Effect sizes were labelled following Cohen's (1988) recommendations.

The Welch Two Sample t-test testing the difference of mpg by am (mean in group
0 = 17.15, mean in group 1 = 24.39) suggests that the effect is negative,
statistically significant, and large (difference = -7.24, 95% CI [-11.28,
-3.21], t(18.33) = -3.77, p = 0.001; Cohen's d = -1.76, 95% CI [-2.82, -0.67])
> summary(r)
The Welch Two Sample t-test testing the difference of mpg by am (mean in group
0 = 17.15, mean in group 1 = 24.39) suggests that the effect is negative,
statistically significant, and large (difference = -7.24, 95% CI [-11.28,
-3.21], t(18.33) = -3.77, p = 0.001, Cohen's d = -1.76)
> 
> # Tables
> as.data.frame(r)
Welch Two Sample t-test

Parameter | Group | Mean_Group1 | Mean_Group2 | Difference |          95% CI | t(18.33) |     p |     d |          d  CI
------------------------------------------------------------------------------------------------------------------------
mpg       |    am |       17.15 |       24.39 |      -7.24 | [-11.28, -3.21] |    -3.77 | 0.001 | -1.76 | [-2.82, -0.67]
[34m
Alternative hypothesis: two.sided[39m> summary(as.data.frame(r))
Difference |          95% CI | t(18.33) |     p |     d |          d  CI
------------------------------------------------------------------------
-7.24      | [-11.28, -3.21] |    -3.77 | 0.001 | -1.76 | [-2.82, -0.67]
[34m
Alternative hypothesis: two.sided[39m> 
> 
> 
> 
> cleanEx()
> nameEx("report.aov")
> ### * report.aov
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.aov
> ### Title: Reporting ANOVAs
> ### Aliases: report.aov report_effectsize.aov report_table.aov
> ###   report_statistics.aov report_parameters.aov report_model.aov
> ###   report_info.aov report_text.aov
> 
> ### ** Examples
> 
> data <- iris
> data$Cat1 <- rep(c("A", "B"), length.out = nrow(data))
> 
> model <- aov(Sepal.Length ~ Species * Cat1, data = data)
> r <- report(model)
Warning: Could not find Sum-of-Squares for the (Intercept) in the ANOVA table.
> r
The ANOVA (formula: Sepal.Length ~ Species * Cat1) suggests that:

  - The main effect of Species is statistically significant and large (F(2, 144)
= 118.43, p < .001; Eta2 (partial) = 0.62, 95% CI [0.54, 1.00])
  - The main effect of Cat1 is statistically not significant and very small (F(1,
144) = 6.25e-03, p = 0.937; Eta2 (partial) = 4.34e-05, 95% CI [0.00, 1.00])
  - The interaction between Species and Cat1 is statistically not significant and
small (F(2, 144) = 0.98, p = 0.377; Eta2 (partial) = 0.01, 95% CI [0.00, 1.00])

Effect sizes were labelled following Field's (2013) recommendations.
> summary(r)
The ANOVA suggests that:

  - The main effect of Species is statistically significant and large (F(2, 144)
= 118.43, p < .001, Eta2 (partial) = 0.62)
  - The main effect of Cat1 is statistically not significant and very small (F(1,
144) = 6.25e-03, p = 0.937, Eta2 (partial) = 4.34e-05)
  - The interaction between Species and Cat1 is statistically not significant and
small (F(2, 144) = 0.98, p = 0.377, Eta2 (partial) = 0.01)
> as.data.frame(r)
Parameter    | Sum_Squares |  df | Mean_Square |        F |      p | Eta2 (partial) | Eta2_partial 95% CI
---------------------------------------------------------------------------------------------------------
Species      |       63.21 |   2 |       31.61 |   118.43 | < .001 |           0.62 |        [0.54, 1.00]
Cat1         |    1.67e-03 |   1 |    1.67e-03 | 6.25e-03 | 0.937  |       4.34e-05 |        [0.00, 1.00]
Species:Cat1 |        0.52 |   2 |        0.26 |     0.98 | 0.377  |           0.01 |        [0.00, 1.00]
Residuals    |       38.43 | 144 |        0.27 |          |        |                |                    
> summary(as.data.frame(r))
Parameter    | Sum_Squares |  df | Mean_Square |        F |      p | Eta2 (partial)
-----------------------------------------------------------------------------------
Species      |       63.21 |   2 |       31.61 |   118.43 | < .001 |           0.62
Cat1         |    1.67e-03 |   1 |    1.67e-03 | 6.25e-03 | 0.937  |       4.34e-05
Species:Cat1 |        0.52 |   2 |        0.26 |     0.98 | 0.377  |           0.01
Residuals    |       38.43 | 144 |        0.27 |          |        |               
> 
> 
> 
> cleanEx()
> nameEx("report.bayesfactor_models")
> ### * report.bayesfactor_models
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.bayesfactor_models
> ### Title: Reporting Models' Bayes Factor
> ### Aliases: report.bayesfactor_models report.bayesfactor_inclusion
> 
> ### ** Examples
> 
> library(report)
> 
> mo0 <- lm(Sepal.Length ~ 1, data = iris)
> mo1 <- lm(Sepal.Length ~ Species, data = iris)
> mo2 <- lm(Sepal.Length ~ Species + Petal.Length, data = iris)
> mo3 <- lm(Sepal.Length ~ Species * Petal.Length, data = iris)
> 
> if (require("bayestestR")) {
+   # Bayes factor - models
+   BFmodels <- bayesfactor_models(mo1, mo2, mo3, denominator = mo0)
+ 
+   r <- report(BFmodels)
+   r
+   as.data.frame(r)
+ 
+   # Bayes factor - inclusion
+   inc_bf <- bayesfactor_inclusion(BFmodels, prior_odds = c(1, 2, 3), match_models = TRUE)
+ 
+   r <- report(inc_bf)
+   r
+   as.data.frame(r)
+ }
Loading required package: bayestestR
Terms                | Pr(prior) | Pr(posterior) | Inclusion BF
---------------------------------------------------------------
Species              |      0.43 |          0.95 |       128.00
Petal.Length         |      0.29 |          0.95 |        61.80
Petal.Length:Species |      0.43 |          0.05 |  1/-3.05e-01

Across matched models only.
With custom prior odds of [1, 2, 3].> 
> 
> 
> cleanEx()

detaching 'package:bayestestR'

> nameEx("report.brmsfit")
> ### * report.brmsfit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.brmsfit
> ### Title: Reporting Bayesian Models from brms
> ### Aliases: report.brmsfit
> 
> ### ** Examples
> 
> library(report)
> 
> # Bayesian models
> ## Not run: 
> ##D if (require("brms")) {
> ##D   model <- brm(mpg ~ qsec + wt, data = mtcars, refresh = 0, iter = 300)
> ##D   r <- report(model)
> ##D   r
> ##D   summary(r)
> ##D   as.data.frame(r)
> ##D   summary(as.data.frame(r))
> ##D }
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("report.compare_performance")
> ### * report.compare_performance
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.compare_performance
> ### Title: Reporting models comparison
> ### Aliases: report.compare_performance report_table.compare_performance
> ###   report_statistics.compare_performance
> ###   report_parameters.compare_performance report_text.compare_performance
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("report.data.frame")
> ### * report.data.frame
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.character
> ### Title: Reporting Datasets and Dataframes
> ### Aliases: report.character report.data.frame report.factor
> ###   report.numeric
> 
> ### ** Examples
> 
> library(report)
> 
> r <- report(iris,
+   centrality = "median", dispersion = FALSE,
+   distribution = TRUE, missing_percentage = TRUE
+ )
> r
The data contains 150 observations of the following 5 variables:

  - Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04,
range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing
  - Sepal.Width: n = 150, Mean = 3.06, SD = 0.44, Median = 3.00, MAD = 0.44,
range: [2, 4.40], Skewness = 0.32, Kurtosis = 0.23, 0% missing
  - Petal.Length: n = 150, Mean = 3.76, SD = 1.77, Median = 4.35, MAD = 1.85,
range: [1, 6.90], Skewness = -0.27, Kurtosis = -1.40, 0% missing
  - Petal.Width: n = 150, Mean = 1.20, SD = 0.76, Median = 1.30, MAD = 1.04,
range: [0.10, 2.50], Skewness = -0.10, Kurtosis = -1.34, 0% missing
  - Species: 3 levels, namely setosa (n = 50, 33.33%), versicolor (n = 50,
33.33%) and virginica (n = 50, 33.33%)
> summary(r)
The data contains 150 observations of the following 5 variables:

  - Sepal.Length: Median = 5.80, range: [4.30, 7.90], Skewness = 0.31, Kurtosis =
-0.55
  - Sepal.Width: Median = 3.00, range: [2, 4.40], Skewness = 0.32, Kurtosis =
0.23
  - Petal.Length: Median = 4.35, range: [1, 6.90], Skewness = -0.27, Kurtosis =
-1.40
  - Petal.Width: Median = 1.30, range: [0.10, 2.50], Skewness = -0.10, Kurtosis =
-1.34
  - Species: 3 levels, namely setosa (n = 50), versicolor (n = 50) and virginica
(n = 50)
> as.data.frame(r)
Variable     |      Level | n_Obs | percentage_Obs | Mean |   SD | Median |  MAD |  Min |  Max | Skewness | Kurtosis | percentage_Missing
-----------------------------------------------------------------------------------------------------------------------------------------
Sepal.Length |            |   150 |                | 5.84 | 0.83 |   5.80 | 1.04 | 4.30 | 7.90 |     0.31 |    -0.55 |               0.00
Sepal.Width  |            |   150 |                | 3.06 | 0.44 |   3.00 | 0.44 | 2.00 | 4.40 |     0.32 |     0.23 |               0.00
Petal.Length |            |   150 |                | 3.76 | 1.77 |   4.35 | 1.85 | 1.00 | 6.90 |    -0.27 |    -1.40 |               0.00
Petal.Width  |            |   150 |                | 1.20 | 0.76 |   1.30 | 1.04 | 0.10 | 2.50 |    -0.10 |    -1.34 |               0.00
Species      |     setosa |    50 |          33.33 |      |      |        |      |      |      |          |          |                   
Species      | versicolor |    50 |          33.33 |      |      |        |      |      |      |          |          |                   
Species      |  virginica |    50 |          33.33 |      |      |        |      |      |      |          |          |                   
> summary(as.data.frame(r))
Variable     |      Level | n_Obs | percentage_Obs | Median |  Min |  Max | Skewness | Kurtosis | percentage_Missing
--------------------------------------------------------------------------------------------------------------------
Sepal.Length |            |       |                |   5.80 | 4.30 | 7.90 |     0.31 |    -0.55 |               0.00
Sepal.Width  |            |       |                |   3.00 | 2.00 | 4.40 |     0.32 |     0.23 |               0.00
Petal.Length |            |       |                |   4.35 | 1.00 | 6.90 |    -0.27 |    -1.40 |               0.00
Petal.Width  |            |       |                |   1.30 | 0.10 | 2.50 |    -0.10 |    -1.34 |               0.00
Species      |     setosa |    50 |          33.33 |        |      |      |          |          |                   
Species      | versicolor |    50 |          33.33 |        |      |      |          |          |                   
Species      |  virginica |    50 |          33.33 |        |      |      |          |          |                   
> 
> # grouped analysis using `{dplyr}` package
> if (require("dplyr")) {
+   r <- iris %>%
+     group_by(Species) %>%
+     report()
+   r
+   summary(r)
+   as.data.frame(r)
+   summary(as.data.frame(r))
+ }
Loading required package: dplyr

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

Group      |     Variable | Mean |   SD |  Min |  Max | n_Missing
-----------------------------------------------------------------
versicolor | Sepal.Length | 5.94 | 0.52 | 4.90 | 7.00 |         0
versicolor |  Sepal.Width | 2.77 | 0.31 | 2.00 | 3.40 |         0
versicolor | Petal.Length | 4.26 | 0.47 | 3.00 | 5.10 |         0
versicolor |  Petal.Width | 1.33 | 0.20 | 1.00 | 1.80 |         0
virginica  | Sepal.Length | 6.59 | 0.64 | 4.90 | 7.90 |         0
virginica  |  Sepal.Width | 2.97 | 0.32 | 2.20 | 3.80 |         0
virginica  | Petal.Length | 5.55 | 0.55 | 4.50 | 6.90 |         0
virginica  |  Petal.Width | 2.03 | 0.27 | 1.40 | 2.50 |         0
> 
> 
> 
> cleanEx()

detaching 'package:dplyr'

> nameEx("report.default")
> ### * report.default
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.default
> ### Title: Template to add report support for new objects
> ### Aliases: report.default report_effectsize.default report_table.default
> ###   report_statistics.default report_parameters.default
> ###   report_intercept.default report_model.default report_random.default
> ###   report_priors.default report_performance.default report_info.default
> ###   report_text.default
> 
> ### ** Examples
> 
> library(report)
> 
> # Add a reproducible example instead of the following
> model <- lm(Sepal.Length ~ Petal.Length * Species, data = iris)
> r <- report(model)
> r
We fitted a linear model (estimated using OLS) to predict Sepal.Length with
Petal.Length (formula: Sepal.Length ~ Petal.Length * Species). The model
explains a statistically significant and substantial proportion of variance (R2
= 0.84, F(5, 144) = 151.71, p < .001, adj. R2 = 0.83). The model's intercept,
corresponding to Petal.Length = 0, is at 4.21 (95% CI [3.41, 5.02], t(144) =
10.34, p < .001). Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052; Std. beta =
1.16, 95% CI [-0.01, 2.32])
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003; Std. beta =
-0.88, 95% CI [-2.41, 0.65])
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001; Std. beta =
-1.75, 95% CI [-3.32, -0.18])
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334; Std. beta = 0.61, 95% CI [-0.63, 1.85])
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120; Std. beta = 0.97, 95% CI [-0.26, 2.19])

Standardized parameters were obtained by fitting the model on a standardized
version of the dataset. 95% Confidence Intervals (CIs) and p-values were
computed using a Wald t-distribution approximation. and We fitted a linear
model (estimated using OLS) to predict Sepal.Length with Species (formula:
Sepal.Length ~ Petal.Length * Species). The model explains a statistically
significant and substantial proportion of variance (R2 = 0.84, F(5, 144) =
151.71, p < .001, adj. R2 = 0.83). The model's intercept, corresponding to
Species = setosa, is at 4.21 (95% CI [3.41, 5.02], t(144) = 10.34, p < .001).
Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052; Std. beta =
1.16, 95% CI [-0.01, 2.32])
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003; Std. beta =
-0.88, 95% CI [-2.41, 0.65])
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001; Std. beta =
-1.75, 95% CI [-3.32, -0.18])
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334; Std. beta = 0.61, 95% CI [-0.63, 1.85])
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120; Std. beta = 0.97, 95% CI [-0.26, 2.19])

Standardized parameters were obtained by fitting the model on a standardized
version of the dataset. 95% Confidence Intervals (CIs) and p-values were
computed using a Wald t-distribution approximation.
> summary(r)
We fitted a linear model to predict Sepal.Length with Petal.Length. The model's
explanatory power is substantial (R2 = 0.84, adj. R2 = 0.83). The model's
intercept is at 4.21 (95% CI [3.41, 5.02]). Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052, Std. beta =
1.16)
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003, Std. beta =
-0.88)
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001, Std. beta =
-1.75)
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334, Std. beta = 0.61)
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120, Std. beta = 0.97) and We fitted a linear model to predict
Sepal.Length with Species. The model's explanatory power is substantial (R2 =
0.84, adj. R2 = 0.83). The model's intercept is at 4.21 (95% CI [3.41, 5.02]).
Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052, Std. beta =
1.16)
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003, Std. beta =
-0.88)
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001, Std. beta =
-1.75)
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334, Std. beta = 0.61)
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120, Std. beta = 0.97)
> as.data.frame(r)
Parameter                           | Coefficient |         95% CI | t(144) |      p | Std. Coef. | Std. Coef. 95% CI |    Fit
------------------------------------------------------------------------------------------------------------------------------
(Intercept)                         |        4.21 | [ 3.41,  5.02] |  10.34 | < .001 |       0.49 |    [-1.03,  2.01] |       
Petal Length                        |        0.54 | [ 0.00,  1.09] |   1.96 | 0.052  |       1.16 |    [-0.01,  2.32] |       
Species [versicolor]                |       -1.81 | [-2.99, -0.62] |  -3.02 | 0.003  |      -0.88 |    [-2.41,  0.65] |       
Species [virginica]                 |       -3.15 | [-4.41, -1.90] |  -4.97 | < .001 |      -1.75 |    [-3.32, -0.18] |       
Petal Length × Species [versicolor] |        0.29 | [-0.30,  0.87] |   0.97 | 0.334  |       0.61 |    [-0.63,  1.85] |       
Petal Length × Species [virginica]  |        0.45 | [-0.12,  1.03] |   1.56 | 0.120  |       0.97 |    [-0.26,  2.19] |       
                                    |             |                |        |        |            |                   |       
AIC                                 |             |                |        |        |            |                   | 106.77
AICc                                |             |                |        |        |            |                   | 107.56
BIC                                 |             |                |        |        |            |                   | 127.84
R2                                  |             |                |        |        |            |                   |   0.84
R2 (adj.)                           |             |                |        |        |            |                   |   0.83
Sigma                               |             |                |        |        |            |                   |   0.34
> summary(as.data.frame(r))
Parameter                           | Coefficient |         95% CI | t(144) |      p | Std. Coef. |    Fit
----------------------------------------------------------------------------------------------------------
(Intercept)                         |        4.21 | [ 3.41,  5.02] |  10.34 | < .001 |       0.49 |       
Petal Length                        |        0.54 | [ 0.00,  1.09] |   1.96 | 0.052  |       1.16 |       
Species [versicolor]                |       -1.81 | [-2.99, -0.62] |  -3.02 | 0.003  |      -0.88 |       
Species [virginica]                 |       -3.15 | [-4.41, -1.90] |  -4.97 | < .001 |      -1.75 |       
Petal Length × Species [versicolor] |        0.29 | [-0.30,  0.87] |   0.97 | 0.334  |       0.61 |       
Petal Length × Species [virginica]  |        0.45 | [-0.12,  1.03] |   1.56 | 0.120  |       0.97 |       
                                    |             |                |        |        |            |       
AICc                                |             |                |        |        |            | 107.56
R2                                  |             |                |        |        |            |   0.84
R2 (adj.)                           |             |                |        |        |            |   0.83
Sigma                               |             |                |        |        |            |   0.34
> 
> 
> 
> cleanEx()
> nameEx("report.htest")
> ### * report.htest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.htest
> ### Title: Reporting 'htest' objects (Correlation, t-test...)
> ### Aliases: report.htest report_effectsize.htest report_table.htest
> ###   report_statistics.htest report_parameters.htest report_model.htest
> ###   report_info.htest report_text.htest
> 
> ### ** Examples
> 
> # t-tests
> report(t.test(iris$Sepal.Width, iris$Sepal.Length))
Effect sizes were labelled following Cohen's (1988) recommendations.

The Welch Two Sample t-test testing the difference between iris$Sepal.Width and
iris$Sepal.Length (mean of x = 3.06, mean of y = 5.84) suggests that the effect
is negative, statistically significant, and large (difference = -2.79, 95% CI
[-2.94, -2.64], t(225.68) = -36.46, p < .001; Cohen's d = -4.21, 95% CI [-4.66,
-3.76])
> report(t.test(iris$Sepal.Width, iris$Sepal.Length, var.equal = TRUE))
Effect sizes were labelled following Cohen's (1988) recommendations.

The Two Sample t-test testing the difference between iris$Sepal.Width and
iris$Sepal.Length (mean of x = 3.06, mean of y = 5.84) suggests that the effect
is negative, statistically significant, and large (difference = -2.79, 95% CI
[-2.94, -2.64], t(298) = -36.46, p < .001; Cohen's d = -4.21, 95% CI [-4.61,
-3.80])
> report(t.test(mtcars$mpg ~ mtcars$vs))
Effect sizes were labelled following Cohen's (1988) recommendations.

The Welch Two Sample t-test testing the difference of mtcars$mpg by mtcars$vs
(mean in group 0 = 16.62, mean in group 1 = 24.56) suggests that the effect is
negative, statistically significant, and large (difference = -7.94, 95% CI
[-11.46, -4.42], t(22.72) = -4.67, p < .001; Cohen's d = -1.70, 95% CI [-2.55,
-0.82])
> report(t.test(mtcars$mpg, mtcars$vs, paired = TRUE))
Warning: 'y' is numeric but has only 2 unique values.
  If this is a grouping variable, convert it to a factor.
Effect sizes were labelled following Cohen's (1988) recommendations.

The Paired t-test testing the difference between mtcars$mpg and mtcars$vs (mean
difference = 19.65) suggests that the effect is positive, statistically
significant, and large (difference = 19.65, 95% CI [17.60, 21.71], t(31) =
19.49, p < .001; Cohen's d = 3.45, 95% CI [2.52, 4.36])
> report(t.test(iris$Sepal.Width, mu = 1))
Effect sizes were labelled following Cohen's (1988) recommendations.

The One Sample t-test testing the difference between iris$Sepal.Width (mean =
3.06) and mu = 1 suggests that the effect is positive, statistically
significant, and large (difference = 2.06, 95% CI [2.99, 3.13], t(149) = 57.81,
p < .001; Cohen's d = 4.72, 95% CI [4.15, 5.27])
> 
> # Correlations
> report(cor.test(iris$Sepal.Width, iris$Sepal.Length))
Effect sizes were labelled following Funder's (2019) recommendations.

The Pearson's product-moment correlation between iris$Sepal.Width and
iris$Sepal.Length is negative, statistically not significant, and small (r =
-0.12, 95% CI [-0.27, 0.04], t(148) = -1.44, p = 0.152)
> 
> 
> 
> cleanEx()
> nameEx("report.lavaan")
> ### * report.lavaan
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.lavaan
> ### Title: Reports of Structural Equation Models (SEM)
> ### Aliases: report.lavaan report_performance.lavaan
> 
> ### ** Examples
> 
> library(report)
> 
> 
> 
> cleanEx()
> nameEx("report.lm")
> ### * report.lm
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.lm
> ### Title: Reporting (General) Linear Models
> ### Aliases: report.lm report_effectsize.lm report_table.lm
> ###   report_statistics.lm report_parameters.lm report_intercept.lm
> ###   report_model.lm report_performance.lm report_info.lm report_text.lm
> ###   report_random.merMod
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("report.sessionInfo")
> ### * report.sessionInfo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.sessionInfo
> ### Title: Report R environment (packages, system, etc.)
> ### Aliases: report.sessionInfo report_packages cite_packages report_system
> 
> ### ** Examples
> 
> 
> library(report)
> 
> session <- sessionInfo()
> 
> r <- report(session)
> r
Analyses were conducted using the R Statistical language (version 4.2.2; R Core
Team, 2022) on Windows 10 x64 (build 19044), using the packages report (version
0.5.5; Makowski D et al., 2021).

References
----------
  - Makowski D, Ben-Shachar M, Patil I, Lüdecke D (2021). "AutomatedResults
Reporting as a Practical Tool to Improve Reproducibility andMethodological Best
Practices Adoption." _CRAN_.<https://github.com/easystats/report>.
  - R Core Team (2022). _R: A Language and Environment for StatisticalComputing_.
R Foundation for Statistical Computing, Vienna,
Austria.<https://www.R-project.org/>.
> summary(r)
The analysis was done using the R Statistical language (v4.2.2; R Core Team,
2022) on Windows 10 x64, using the packages report (v0.5.5).
> as.data.frame(r)
Package | Version |                                                                                                                                                                                                                  Reference
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
R       |   4.2.2 |                                                        R Core Team (2022). _R: A Language and Environment for StatisticalComputing_. R Foundation for Statistical Computing, Vienna, Austria.<https://www.R-project.org/>.
report  |   0.5.5 | Makowski D, Ben-Shachar M, Patil I, Lüdecke D (2021). "AutomatedResults Reporting as a Practical Tool to Improve Reproducibility andMethodological Best Practices Adoption." _CRAN_.<https://github.com/easystats/report>.
> summary(as.data.frame(r))
Package | Version
-----------------
R       |   4.2.2
report  |   0.5.5
> 
> # Convenience functions
> report_packages(include_R = FALSE)
  - report (version 0.5.5; Makowski D et al., 2021)> cite_packages(prefix = "> ")
> Makowski D, Ben-Shachar M, Patil I, Lüdecke D (2021). "AutomatedResults Reporting as a Practical Tool to Improve Reproducibility andMethodological Best Practices Adoption." _CRAN_.<https://github.com/easystats/report>.
> R Core Team (2022). _R: A Language and Environment for StatisticalComputing_. R Foundation for Statistical Computing, Vienna, Austria.<https://www.R-project.org/>.> report_system()
Analyses were conducted using the R Statistical language (version 4.2.2; R Core
Team, 2022) on Windows 10 x64 (build 19044)
> 
> 
> 
> 
> cleanEx()
> nameEx("report.stanreg")
> ### * report.stanreg
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.stanreg
> ### Title: Reporting Bayesian Models
> ### Aliases: report.stanreg
> 
> ### ** Examples
> 
> library(report)
> 
> 
> 
> cleanEx()
> nameEx("report.test_performance")
> ### * report.test_performance
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.test_performance
> ### Title: Reporting models comparison
> ### Aliases: report.test_performance report_table.test_performance
> ###   report_statistics.test_performance report_parameters.test_performance
> ###   report_text.test_performance
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("report_date")
> ### * report_date
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_date
> ### Title: Miscellaneous reports
> ### Aliases: report_date report_story
> 
> ### ** Examples
> 
> library(report)
> 
> report_date()
It's Monday, January 30 of the year 2023, at  3pm 15 and 35 seconds
> summary(report_date())
30/01/23 - 15:15:35
> report_story()
Did you ever hear the tragedy of Darth Plagueis The Wise? I thought not. It's
not a story the Jedi would tell you. It's a Sith legend. Darth Plagueis was a
Dark Lord of the Sith, so powerful and so wise he could use the Force to
influence the midichlorians to create life... He had such a knowledge of the
dark side that he could even keep the ones he cared about from dying. The dark
side of the Force is a pathway to many abilities some consider to be unnatural.
He became so powerful... the only thing he was afraid of was losing his power,
which eventually, of course, he did. Unfortunately, he taught his apprentice
everything he knew, then his apprentice killed him in his sleep. Ironic. He
could save others from death, but not himself.
> 
> 
> 
> cleanEx()
> nameEx("report_effectsize")
> ### * report_effectsize
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_effectsize
> ### Title: Report the effect size(s) of a model or a test
> ### Aliases: report_effectsize
> 
> ### ** Examples
> 
> library(report)
> 
> # h-tests
> report_effectsize(t.test(iris$Sepal.Width, iris$Sepal.Length))
Effect sizes were labelled following Cohen's (1988) recommendations. 

large (Cohen's d = -4.21, 95% CI [-4.66, -3.76])> 
> # ANOVAs
> report_effectsize(aov(Sepal.Length ~ Species, data = iris))
Warning: Could not find Sum-of-Squares for the (Intercept) in the ANOVA table.
Effect sizes were labelled following Field's (2013) recommendations. 

large (Eta2 = 0.62, 95% CI [0.54, 1.00])> 
> # GLMs
> report_effectsize(lm(Sepal.Length ~ Petal.Length * Species, data = iris))
Effect sizes were labelled following Cohen's (1988) recommendations. 

small (Std. beta = 0.49, 95% CI [-1.03, 2.01])
large (Std. beta = 1.16, 95% CI [-0.01, 2.32])
large (Std. beta = -0.88, 95% CI [-2.41, 0.65])
large (Std. beta = -1.75, 95% CI [-3.32, -0.18])
medium (Std. beta = 0.61, 95% CI [-0.63, 1.85])
large (Std. beta = 0.97, 95% CI [-0.26, 2.19])> report_effectsize(glm(vs ~ disp, data = mtcars, family = "binomial"))
Effect sizes were labelled following Chen's (2010) recommendations. 

small (Std. beta = -0.85, 95% CI [-2.42, 0.27])
large (Std. beta = -2.68, 95% CI [-4.90, -1.27])> 
> 
> 
> cleanEx()
> nameEx("report_info")
> ### * report_info
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_info
> ### Title: Report additional information
> ### Aliases: report_info
> 
> ### ** Examples
> 
> library(report)
> 
> # h-tests
> report_info(t.test(iris$Sepal.Width, iris$Sepal.Length))
Effect sizes were labelled following Cohen's (1988) recommendations.> 
> # ANOVAs
> report_info(aov(Sepal.Length ~ Species, data = iris))
Warning: Could not find Sum-of-Squares for the (Intercept) in the ANOVA table.
Effect sizes were labelled following Field's (2013) recommendations.> 
> 
> 
> cleanEx()
> nameEx("report_intercept")
> ### * report_intercept
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_intercept
> ### Title: Report intercept
> ### Aliases: report_intercept
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("report_model")
> ### * report_model
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_model
> ### Title: Report the model type
> ### Aliases: report_model
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("report_parameters")
> ### * report_parameters
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_parameters
> ### Title: Report the parameters of a model
> ### Aliases: report_parameters
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("report_participants")
> ### * report_participants
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_participants
> ### Title: Reporting the participant data
> ### Aliases: report_participants
> 
> ### ** Examples
> 
> library(report)
> data <- data.frame(
+   "Age" = c(22, 23, 54, 21, 8, 42),
+   "Sex" = c("Intersex", "F", "M", "M", "NA", NA),
+   "Gender" = c("N", "W", "W", "M", "NA", NA)
+ )
> report_participants(data, age = "Age", sex = "Sex")
[1] "6 participants (Mean age = 28.3, SD = 16.6, range: [8, 54]; Sex: 16.7% females, 33.3% males, 16.7% other, 33.33% missing; Gender: 33.3% women, 16.7% men, 16.67% non-binary, 33.33% missing)"
> 
> # Years of education (relative to high school graduation)
> data$Education <- c(0, 8, -3, -5, 3, 5)
> report_participants(data,
+   age = "Age", sex = "Sex", gender = "Gender",
+   education = "Education"
+ )
[1] "6 participants (Mean age = 28.3, SD = 16.6, range: [8, 54]; Sex: 16.7% females, 33.3% males, 16.7% other, 33.33% missing; Gender: 33.3% women, 16.7% men, 16.67% non-binary, 33.33% missing; Mean education = 1.3, SD = 4.9, range: [-5, 8])"
> 
> # Education as factor
> data$Education2 <- c(
+   "Bachelor", "PhD", "Highschool",
+   "Highschool", "Bachelor", "Bachelor"
+ )
> report_participants(data, age = "Age", sex = "Sex", gender = "Gender", education = "Education2")
[1] "6 participants (Mean age = 28.3, SD = 16.6, range: [8, 54]; Sex: 16.7% females, 33.3% males, 16.7% other, 33.33% missing; Gender: 33.3% women, 16.7% men, 16.67% non-binary, 33.33% missing; Education: Bachelor, 50.00%; Highschool, 33.33%; PhD, 16.67%)"
> 
> # Country
> data <- data.frame(
+   "Age" = c(22, 23, 54, 21, 8, 42, 18, 32, 24, 27, 45),
+   "Sex" = c("Intersex", "F", "F", "M", "M", "M", "F", "F", "F", "F", "F"),
+   "Gender" = c("N", "W", "W", "M", "M", "M", "W", "W", "W", "W", "W"),
+   "Country" = c(
+     "USA", NA, "Canada", "Canada", "India", "Germany",
+     "USA", "USA", "USA", "USA", "Canada"
+   )
+ )
> report_participants(data)
[1] "11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Country: 45.45% USA, 27.27% Canada, 27.27% other)"
> 
> # Country, control presentation treshold
> report_participants(data, threshold = 5)
[1] "11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Country: 45.45% USA, 27.27% Canada, 9.09% Germany, 9.09% India, 9.09% missing)"
> 
> # Race/ethnicity
> data <- data.frame(
+   "Age" = c(22, 23, 54, 21, 8, 42, 18, 32, 24, 27, 45),
+   "Sex" = c("Intersex", "F", "F", "M", "M", "M", "F", "F", "F", "F", "F"),
+   "Gender" = c("N", "W", "W", "M", "M", "M", "W", "W", "W", "W", "W"),
+   "Race" = c(
+     "Black", NA, "White", "Asian", "Black", "Arab", "Black",
+     "White", "Asian", "Southeast Asian", "Mixed"
+   )
+ )
> report_participants(data)
[1] "11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Race: 27.27% Black, 18.18% Asian, 18.18% White, 36.36% other)"
> 
> # Race/ethnicity, control presentation treshold
> report_participants(data, threshold = 5)
[1] "11 participants (Mean age = 28.7, SD = 13.4, range: [8, 54]; Sex: 63.6% females, 27.3% males, 9.1% other; Gender: 63.6% women, 27.3% men, 9.09% non-binary; Race: 27.27% Black, 18.18% Asian, 18.18% White, 9.09% Arab, 9.09% Mixed, 9.09% Southeast Asian, 9.09% missing)"
> 
> # Repeated measures data
> data <- data.frame(
+   "Age" = c(22, 22, 54, 54, 8, 8),
+   "Sex" = c("I", "F", "M", "M", "F", "F"),
+   "Gender" = c("N", "W", "W", "M", "M", "M"),
+   "Participant" = c("S1", "S1", "s2", "s2", "s3", "s3")
+ )
> report_participants(data, age = "Age", sex = "Sex", gender = "Gender", participants = "Participant")
[1] "3 participants (Mean age = 28.0, SD = 23.6, range: [8, 54]; Sex: 33.3% females, 33.3% males, 33.3% other; Gender: 33.3% women, 33.3% men, 33.33% non-binary)"
> 
> # Grouped data
> data <- data.frame(
+   "Age" = c(22, 22, 54, 54, 8, 8, 42, 42),
+   "Sex" = c("I", "I", "M", "M", "F", "F", "F", "F"),
+   "Gender" = c("N", "N", "W", "M", "M", "M", "Non-Binary", "Non-Binary"),
+   "Participant" = c("S1", "S1", "s2", "s2", "s3", "s3", "s4", "s4"),
+   "Condition" = c("A", "A", "A", "A", "B", "B", "B", "B")
+ )
> 
> report_participants(data,
+   age = "Age",
+   sex = "Sex",
+   gender = "Gender",
+   participants = "Participant",
+   group = "Condition"
+ )
[1] "For the 'Condition - A' group: 2 participants (Mean age = 38.0, SD = 22.6, range: [22, 54]; Sex: 0.0% females, 50.0% males, 50.0% other; Gender: 50.0% women, 0.0% men, 50.00% non-binary) and for the 'Condition - B' group: 2 participants (Mean age = 25.0, SD = 24.0, range: [8, 42]; Sex: 100.0% females, 0.0% males, 0.0% other; Gender: 0.0% women, 50.0% men, 50.00% non-binary)"
> 
> # Spell sample size
> paste(
+   report_participants(data, participants = "Participant", spell_n = TRUE),
+   "were recruited in the study by means of torture and coercion."
+ )
[1] "Four participants (Mean age = 31.5, SD = 20.5, range: [8, 54]; Sex: 50.0% females, 25.0% males, 25.0% other; Gender: 25.0% women, 25.0% men, 50.00% non-binary) were recruited in the study by means of torture and coercion."
> 
> 
> 
> cleanEx()
> nameEx("report_performance")
> ### * report_performance
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_performance
> ### Title: Report the model's quality and fit indices
> ### Aliases: report_performance
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("report_priors")
> ### * report_priors
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_priors
> ### Title: Report priors of Bayesian models
> ### Aliases: report_priors
> 
> ### ** Examples
> 
> library(report)
> 
> # Bayesian models
> if (require("rstanarm")) {
+   model <- stan_glm(mpg ~ disp, data = mtcars, refresh = 0, iter = 1000)
+   r <- report_priors(model)
+   r
+   summary(r)
+ }
Loading required package: rstanarm
Loading required package: Rcpp
This is rstanarm version 2.21.3
- See https://mc-stan.org/rstanarm/articles/priors for changes to default priors!
- Default priors may change, so it's safest to specify priors, even if equivalent to the defaults.
- For execution on a local, multicore CPU with excess RAM we recommend calling
  options(mc.cores = parallel::detectCores())
Priors over parameters were set as normal (mean = 0.00, SD = 0.12) distributions> 
> 
> 
> cleanEx()

detaching 'package:rstanarm', 'package:Rcpp'

> nameEx("report_random")
> ### * report_random
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_random
> ### Title: Report random effects and factors
> ### Aliases: report_random
> 
> ### ** Examples
> 
> library(report)
> 
> # Mixed models
> if (require("lme4")) {
+   model <- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris)
+   r <- report_random(model)
+   r
+   summary(r)
+ }
Loading required package: lme4
Loading required package: Matrix
[1] "The model included Species as random effect"
> ## Not run: 
> ##D if (require("brms")) {
> ##D   model <- brm(mpg ~ disp + (1 | cyl), data = mtcars, refresh = 0, iter = 1000)
> ##D   r <- report_random(model)
> ##D   r
> ##D   summary(r)
> ##D }
> ## End(Not run)
> 
> 
> 
> cleanEx()

detaching 'package:lme4', 'package:Matrix'

> nameEx("report_sample")
> ### * report_sample
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_sample
> ### Title: Sample Description
> ### Aliases: report_sample
> 
> ### ** Examples
> 
> library(report)
> 
> report_sample(iris[, 1:4])
[34m# Descriptive Statistics

[39mVariable               |     Summary
------------------------------------
Mean Sepal.Length (SD) | 5.84 (0.83)
Mean Sepal.Width (SD)  | 3.06 (0.44)
Mean Petal.Length (SD) | 3.76 (1.77)
Mean Petal.Width (SD)  | 1.20 (0.76)
> report_sample(iris, select = c("Sepal.Length", "Petal.Length", "Species"))
[34m# Descriptive Statistics

[39mVariable                |     Summary
-------------------------------------
Mean Sepal.Length (SD)  | 5.84 (0.83)
Mean Petal.Length (SD)  | 3.76 (1.77)
Species [setosa], %     |        33.3
Species [versicolor], % |        33.3
Species [virginica], %  |        33.3
> report_sample(iris, group_by = "Species")
[34m# Descriptive Statistics

[39mVariable               | setosa (n=50) | versicolor (n=50) | virginica (n=50) | Total (n=150)
---------------------------------------------------------------------------------------------
Mean Sepal.Length (SD) |   5.01 (0.35) |       5.94 (0.52) |      6.59 (0.64) |   5.84 (0.83)
Mean Sepal.Width (SD)  |   3.43 (0.38) |       2.77 (0.31) |      2.97 (0.32) |   3.06 (0.44)
Mean Petal.Length (SD) |   1.46 (0.17) |       4.26 (0.47) |      5.55 (0.55) |   3.76 (1.77)
Mean Petal.Width (SD)  |   0.25 (0.11) |       1.33 (0.20) |      2.03 (0.27) |   1.20 (0.76)
> 
> 
> 
> cleanEx()
> nameEx("report_statistics")
> ### * report_statistics
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_statistics
> ### Title: Report the statistics of a model
> ### Aliases: report_statistics
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("report_table")
> ### * report_table
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_table
> ### Title: Report a descriptive table
> ### Aliases: report_table
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("report_text")
> ### * report_text
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report_text
> ### Title: Report a textual description of an object
> ### Aliases: report_text
> 
> ### ** Examples
> 
> library(report)
> 
> # Miscellaneous
> r <- report_text(sessionInfo())
> r
Analyses were conducted using the R Statistical language (version 4.2.2; R Core
Team, 2022) on Windows 10 x64 (build 19044), using the packages report (version
0.5.5; Makowski D et al., 2021).

References
----------
  - Makowski D, Ben-Shachar M, Patil I, Lüdecke D (2021). "AutomatedResults
Reporting as a Practical Tool to Improve Reproducibility andMethodological Best
Practices Adoption." _CRAN_.<https://github.com/easystats/report>.
  - R Core Team (2022). _R: A Language and Environment for StatisticalComputing_.
R Foundation for Statistical Computing, Vienna,
Austria.<https://www.R-project.org/>.
> summary(r)
The analysis was done using the R Statistical language (v4.2.2; R Core Team,
2022) on Windows 10 x64, using the packages report (v0.5.5).
> 
> # Data
> report_text(iris$Sepal.Length)
iris$Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04,
range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing
> report_text(as.character(round(iris$Sepal.Length, 1)))
as.character(round(iris$Sepal.Length, 1)): 35 entries, such as 5 (6.67%); 5.1
(6.00%); 6.3 (6.00%) and 32 others (0 missing)
> report_text(iris$Species)
iris$Species: 3 levels, namely setosa (n = 50, 33.33%), versicolor (n = 50,
33.33%) and virginica (n = 50, 33.33%)
> report_text(iris)
The data contains 150 observations of the following 5 variables:

  - Sepal.Length: n = 150, Mean = 5.84, SD = 0.83, Median = 5.80, MAD = 1.04,
range: [4.30, 7.90], Skewness = 0.31, Kurtosis = -0.55, 0% missing
  - Sepal.Width: n = 150, Mean = 3.06, SD = 0.44, Median = 3.00, MAD = 0.44,
range: [2, 4.40], Skewness = 0.32, Kurtosis = 0.23, 0% missing
  - Petal.Length: n = 150, Mean = 3.76, SD = 1.77, Median = 4.35, MAD = 1.85,
range: [1, 6.90], Skewness = -0.27, Kurtosis = -1.40, 0% missing
  - Petal.Width: n = 150, Mean = 1.20, SD = 0.76, Median = 1.30, MAD = 1.04,
range: [0.10, 2.50], Skewness = -0.10, Kurtosis = -1.34, 0% missing
  - Species: 3 levels, namely setosa (n = 50, 33.33%), versicolor (n = 50,
33.33%) and virginica (n = 50, 33.33%)
> 
> # h-tests
> report_text(t.test(iris$Sepal.Width, iris$Sepal.Length))
Effect sizes were labelled following Cohen's (1988) recommendations.

The Welch Two Sample t-test testing the difference between iris$Sepal.Width and
iris$Sepal.Length (mean of x = 3.06, mean of y = 5.84) suggests that the effect
is negative, statistically significant, and large (difference = -2.79, 95% CI
[-2.94, -2.64], t(225.68) = -36.46, p < .001; Cohen's d = -4.21, 95% CI [-4.66,
-3.76])
> 
> # ANOVA
> r <- report_text(aov(Sepal.Length ~ Species, data = iris))
Warning: Could not find Sum-of-Squares for the (Intercept) in the ANOVA table.
Warning: Could not find Sum-of-Squares for the (Intercept) in the ANOVA table.
> r
The ANOVA (formula: Sepal.Length ~ Species) suggests that:

  - The main effect of Species is statistically significant and large (F(2, 147)
= 119.26, p < .001; Eta2 = 0.62, 95% CI [0.54, 1.00])

Effect sizes were labelled following Field's (2013) recommendations.
> summary(r)
The ANOVA suggests that:

  - The main effect of Species is statistically significant and large (F(2, 147)
= 119.26, p < .001, Eta2 = 0.62)
> 
> # GLMs
> r <- report_text(lm(Sepal.Length ~ Petal.Length * Species, data = iris))
> r
We fitted a linear model (estimated using OLS) to predict Sepal.Length with
Petal.Length (formula: Sepal.Length ~ Petal.Length * Species). The model
explains a statistically significant and substantial proportion of variance (R2
= 0.84, F(5, 144) = 151.71, p < .001, adj. R2 = 0.83). The model's intercept,
corresponding to Petal.Length = 0, is at 4.21 (95% CI [3.41, 5.02], t(144) =
10.34, p < .001). Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052; Std. beta =
1.16, 95% CI [-0.01, 2.32])
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003; Std. beta =
-0.88, 95% CI [-2.41, 0.65])
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001; Std. beta =
-1.75, 95% CI [-3.32, -0.18])
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334; Std. beta = 0.61, 95% CI [-0.63, 1.85])
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120; Std. beta = 0.97, 95% CI [-0.26, 2.19])

Standardized parameters were obtained by fitting the model on a standardized
version of the dataset. 95% Confidence Intervals (CIs) and p-values were
computed using a Wald t-distribution approximation. and We fitted a linear
model (estimated using OLS) to predict Sepal.Length with Species (formula:
Sepal.Length ~ Petal.Length * Species). The model explains a statistically
significant and substantial proportion of variance (R2 = 0.84, F(5, 144) =
151.71, p < .001, adj. R2 = 0.83). The model's intercept, corresponding to
Species = setosa, is at 4.21 (95% CI [3.41, 5.02], t(144) = 10.34, p < .001).
Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052; Std. beta =
1.16, 95% CI [-0.01, 2.32])
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003; Std. beta =
-0.88, 95% CI [-2.41, 0.65])
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001; Std. beta =
-1.75, 95% CI [-3.32, -0.18])
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334; Std. beta = 0.61, 95% CI [-0.63, 1.85])
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120; Std. beta = 0.97, 95% CI [-0.26, 2.19])

Standardized parameters were obtained by fitting the model on a standardized
version of the dataset. 95% Confidence Intervals (CIs) and p-values were
computed using a Wald t-distribution approximation.
> summary(r)
We fitted a linear model to predict Sepal.Length with Petal.Length. The model's
explanatory power is substantial (R2 = 0.84, adj. R2 = 0.83). The model's
intercept is at 4.21 (95% CI [3.41, 5.02]). Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052, Std. beta =
1.16)
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003, Std. beta =
-0.88)
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001, Std. beta =
-1.75)
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334, Std. beta = 0.61)
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120, Std. beta = 0.97) and We fitted a linear model to predict
Sepal.Length with Species. The model's explanatory power is substantial (R2 =
0.84, adj. R2 = 0.83). The model's intercept is at 4.21 (95% CI [3.41, 5.02]).
Within this model:

  - The effect of Petal Length is statistically non-significant and positive
(beta = 0.54, 95% CI [-4.76e-03, 1.09], t(144) = 1.96, p = 0.052, Std. beta =
1.16)
  - The effect of Species [versicolor] is statistically significant and negative
(beta = -1.81, 95% CI [-2.99, -0.62], t(144) = -3.02, p = 0.003, Std. beta =
-0.88)
  - The effect of Species [virginica] is statistically significant and negative
(beta = -3.15, 95% CI [-4.41, -1.90], t(144) = -4.97, p < .001, Std. beta =
-1.75)
  - The effect of Petal Length × Species [versicolor] is statistically
non-significant and positive (beta = 0.29, 95% CI [-0.30, 0.87], t(144) = 0.97,
p = 0.334, Std. beta = 0.61)
  - The effect of Petal Length × Species [virginica] is statistically
non-significant and positive (beta = 0.45, 95% CI [-0.12, 1.03], t(144) = 1.56,
p = 0.120, Std. beta = 0.97)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  12.02 1.47 15.89 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
