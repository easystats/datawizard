
R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "report"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('report')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cite_easystats")
> ### * cite_easystats
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cite_easystats
> ### Title: Cite the easystats ecosystem
> ### Aliases: cite_easystats summary.cite_easystats print.cite_easystats
> 
> ### ** Examples
> 
> 
> ## Not run: 
> ##D # Cite just the 'easystats' umbrella package:
> ##D cite_easystats()
> ##D summary(cite_easystats(), what = "all")
> ##D 
> ##D # Cite every easystats package:
> ##D cite_easystats(packages = "all")
> ##D summary(cite_easystats(packages = "all"), what = "all")
> ##D 
> ##D # Cite specific packages:
> ##D cite_easystats(packages = c("modelbased", "see"))
> ##D summary(cite_easystats(packages = c("modelbased", "see")), what = "all")
> ##D 
> ##D # To cite easystats packages in an RMarkdown document, use:
> ##D 
> ##D ## In-text citations:
> ##D print(cite_easystats(format = "markdown"), what = "intext")
> ##D 
> ##D ## Bibliography (print with the  `output = 'asis'` option on the code chunk)
> ##D print(cite_easystats(format = "markdown"), what = "refs")
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("format_citation")
> ### * format_citation
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: format_citation
> ### Title: Citation formatting
> ### Aliases: format_citation cite_citation clean_citation
> 
> ### ** Examples
> 
> library(report)
> 
> citation <- "Makowski, D., Ben-Shachar, M. S., Patil, I., & Ludecke, D. (2020).
+ Methods and Algorithms for Correlation Analysis in R. Journal of Open Source
+ Software, 5(51), 2306."
> 
> format_citation(citation, authorsdate = TRUE)
[1] "Makowski, Ben-Shachar, Patil, & Ludecke (2020)"
> format_citation(citation, authorsdate = TRUE, short = TRUE)
[1] "Makowski et al. (2020)"
> format_citation(citation, authorsdate = TRUE, short = TRUE, intext = TRUE)
[1] "Makowski et al., 2020"
> 
> cite_citation(citation)
[1] "(Makowski et al., 2020)"
> clean_citation(citation())
[1] "R Core Team (2022). _R: A Language and Environment for StatisticalComputing_. R Foundation for Statistical Computing, Vienna, Austria.<https://www.R-project.org/>."
> 
> 
> 
> cleanEx()
> nameEx("format_formula")
> ### * format_formula
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: format_algorithm
> ### Title: Convenient formatting of text components
> ### Aliases: format_algorithm format_formula format_model
> 
> ### ** Examples
> 
> model <- lm(Sepal.Length ~ Species, data = iris)
> format_algorithm(model)
[1] "OLS"
> 
> if (require("lme4")) {
+   model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
+   format_algorithm(model)
+ }
Loading required package: lme4
Loading required package: Matrix
[1] "REML and nloptwrap optimizer"
> model <- lm(Sepal.Length ~ Species, data = iris)
> format_formula(model)
[1] "formula: Sepal.Length ~ Species"
> 
> if (require("lme4")) {
+   model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
+   format_formula(model)
+   format_formula(model, "random")
+ }
[1] "formula: ~1 | Species"
> model <- lm(Sepal.Length ~ Species, data = iris)
> format_model(model)
[1] "linear model"
> 
> if (require("lme4")) {
+   model <- lme4::lmer(Sepal.Length ~ Sepal.Width + (1 | Species), data = iris)
+   format_model(model)
+ }
[1] "linear mixed model"
> 
> 
> 
> cleanEx()

detaching 'package:lme4', 'package:Matrix'

> nameEx("report")
> ### * report
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report
> ### Title: Automatic reporting of R objects
> ### Aliases: report
> 
> ### ** Examples
> 
> 
> library(report)
> 
> model <- t.test(mpg ~ am, data = mtcars)
> r <- report(model)
Warning: Unable to retrieve data from htest object.
  Returning an [1mapproximate[22m effect size using t_to_d().
> 
> # Text
> r
Effect sizes were labelled following Cohen's (1988) recommendations.

The Welch Two Sample t-test testing the difference of mpg by am (mean in group
0 = 17.15, mean in group 1 = 24.39) suggests that the effect is negative,
statistically significant, and large (difference = -7.24, 95% CI [-11.28,
-3.21], t(18.33) = -3.77, p = 0.001; Cohen's d = -1.76, 95% CI [-2.82, -0.67])
> summary(r)
The Welch Two Sample t-test testing the difference of mpg by am (mean in group
0 = 17.15, mean in group 1 = 24.39) suggests that the effect is negative,
statistically significant, and large (difference = -7.24, 95% CI [-11.28,
-3.21], t(18.33) = -3.77, p = 0.001, Cohen's d = -1.76)
> 
> # Tables
> as.data.frame(r)
Welch Two Sample t-test

Parameter | Group | Mean_Group1 | Mean_Group2 | Difference |          95% CI | t(18.33) |     p |     d |          d  CI
------------------------------------------------------------------------------------------------------------------------
mpg       |    am |       17.15 |       24.39 |      -7.24 | [-11.28, -3.21] |    -3.77 | 0.001 | -1.76 | [-2.82, -0.67]
[34m
Alternative hypothesis: two.sided[39m> summary(as.data.frame(r))
Difference |          95% CI | t(18.33) |     p |     d |          d  CI
------------------------------------------------------------------------
-7.24      | [-11.28, -3.21] |    -3.77 | 0.001 | -1.76 | [-2.82, -0.67]
[34m
Alternative hypothesis: two.sided[39m> 
> 
> 
> 
> cleanEx()
> nameEx("report.aov")
> ### * report.aov
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report.aov
> ### Title: Reporting ANOVAs
> ### Aliases: report.aov report_effectsize.aov report_table.aov
> ###   report_statistics.aov report_parameters.aov report_model.aov
> ###   report_info.aov report_text.aov
> 
> ### ** Examples
> 
> data <- iris
> data$Cat1 <- rep(c("A", "B"), length.out = nrow(data))
> 
> model <- aov(Sepal.Length ~ Species * Cat1, data = data)
> r <- report(model)
Warning: Could not find Sum-of-Squares for the (Intercept) in the ANOVA table.
Error in if (endsWith(x_dep, "()")) { : the condition has length > 1
Calls: report ... .select_nse -> .eval_expr -> .eval_call -> .select_context
Execution halted
